{"version":3,"sources":["utils/functions.ts","components/_shared/Input/InputTextarea/InputTextarea.tsx","components/_shared/Input/InputTextarea/InputTextarea.module.scss","components/Post/PostHeader/PostHeader.module.scss","components/_shared/ConfirmPopup/ConfirmPopup.module.scss","components/Post/PostText/PostText.module.scss","components/Post/PostComments/PostComments.module.scss","components/_forms/AddPostCommentForm/AddPostCommentForm.module.scss","components/Post/PostComments/PostComment/PostComment.module.scss","components/_shared/ConfirmPopup/ConfirmPopup.tsx","components/_shared/Button/DeleteButton/DeleteButton.tsx","components/Post/PostHeader/PostHeader.tsx","components/Post/PostText/PostText.tsx","components/Post/PostControls/PostControls.tsx","components/_forms/AddPostCommentForm/AddPostCommentForm.tsx","components/Post/PostComments/PostComment/PostComment.tsx","components/_shared/Button/ShowMoreButton/ShowMoreButton.tsx","components/Post/PostComments/PostCommentsList/PostCommentsList.tsx","components/Post/PostComments/PostComments.tsx","components/Post/Post.tsx","components/Feed/Feed.tsx","../node_modules/react-bootstrap-icons/dist/icons/image.js","components/_forms/NewPostInputForm/NewPostInputForm.tsx","components/_forms/NewPostInputForm/NewPostInputForm.module.scss","components/Feed/Feed.module.scss"],"names":["formatDate","date","format","moment","InputTextarea","name","label","rules","control","rows","disabled","placeholder","render","field","fieldState","required","error","className","classes","textarea","value","onChange","module","exports","ConfirmPopup","open","children","confirmButtonText","declineButtonText","onConfirm","onDecline","important","ModalWindow","question","buttons","Button","type","onClick","Text","DeleteButton","onDelete","warningMessage","useState","setOpen","size","Icon","color","colors","textMid","PostHeader","id","author","isAuthor","padding","gap","to","username","Avatar","smallImg","avatar","small","online","verticalAlign","userName","firstName","lastName","PostText","bordered","text","PostControls","likes","isLiked","onLikeClick","onCommentClick","onShareClick","horizontalAlign","stretch","length","accent","AddPostCommentForm","onAddComment","authorizedUser","useSelector","state","auth","user","Form","onSubmit","data","initialValues","resetAfterSubmit","tabIndex","undefined","InputText","PostComment","_id","createdAt","authorizedUserId","ShowMoreButton","route","PostCommentsList","active","comments","postId","slice","reverse","map","comment","PostComments","onAddCommentClick","onDeleteCommentClick","classnames","Post","post","onPostDelete","onPostAddLike","onPostDeleteLike","onDeleteComment","commentSectionActive","setCommentSectionActive","includes","Card","console","log","commentId","Feed","posts","wrapper","FeedContainer","dispatch","useDispatch","addPostLike","deletePostLike","addPostComment","deletePostComment","deletePost","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","rest","React","createElement","xmlns","viewBox","width","height","fill","d","propTypes","PropTypes","string","oneOfType","number","defaultProps","NewPostInputForm","isAddPostPending","newPostData","newPostText","addPost","controls","e","preventDefault","spinner"],"mappings":"oIAAA,wDAMaA,EAAa,SAACC,GAAwD,IAAnCC,EAAkC,uDAAjB,aAC7D,OAAOC,IAAOF,GAAMC,OAAOA,K,iCCP/B,sFAeaE,EAAkD,SAAC,GAQO,IAPHC,EAOE,EAPFA,KACAC,EAME,EANFA,MACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,QAIE,IAHFC,YAGE,MAHK,EAGL,MAFFC,gBAEE,SADlEC,EACkE,EADlEA,YAEA,OAAO,cAAC,IAAD,CACHH,QAASA,EACTH,KAAMA,EACNE,MAAOA,EACPK,OAAQ,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,WAAT,OAAyB,cAAC,IAAD,CAAMR,MAAOA,EAAOS,WAAW,OAACR,QAAD,IAACA,MAAOQ,UAAUC,MAAOF,EAAWE,MAC7DN,SAAUA,EADhB,SAE7B,0BACIO,UAAS,UAAKC,IAAQC,SAAb,YAAyBL,EAAWE,MAAQE,IAAQF,MAAQ,IACrEX,KAAMQ,EAAMR,KACZe,MAAOP,EAAMO,MACbC,SAAUR,EAAMQ,SAChBZ,KAAMA,EACNC,SAAUA,EACVC,YAAaA,W,oBCpC7BW,EAAOC,QAAU,CAAC,KAAO,4BAA4B,SAAW,gCAAgC,MAAQ,+B,oBCAxGD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,KAAO,2B,oBCAjGD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,QAAU,gC,oBCAxGD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,yB,oBCAvDD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,OAAS,+B,oBCAvGD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,OAAS,qC,oBCAnED,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,KAAO,4B,gLCYlFC,EAAgD,SAAC,GAQA,IAPHC,EAOE,EAPFA,KACAC,EAME,EANFA,SAME,IALFC,yBAKE,MALkB,KAKlB,MAJFC,yBAIE,MAJkB,SAIlB,EAHFC,EAGE,EAHFA,UACAC,EAEE,EAFFA,UAEE,IADFC,iBACE,SACzD,OAAQ,cAACC,EAAA,EAAD,CAAaP,KAAMA,EAAnB,SACJ,gCACI,qBAAKR,UAAWC,IAAQe,SAAxB,SAAmCP,IACnC,sBAAKT,UAAWC,IAAQgB,QAAxB,UACI,cAACC,EAAA,EAAD,CAAQC,KAAML,EAAY,SAAW,UAAWM,QAASR,EAAzD,SACI,cAACM,EAAA,EAAOG,KAAR,UAAcX,MAElB,cAACQ,EAAA,EAAD,CAAQC,KAAML,EAAY,UAAY,YAAaM,QAASP,EAA5D,SACI,cAACK,EAAA,EAAOG,KAAR,UAAcV,eCnBrBW,EAA2C,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,eAAqC,IAArB/B,gBAAqB,SACrG,EAAwBgC,oBAAS,GAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KAIA,OAAO,eAACR,EAAA,EAAD,CAAQE,QAASI,EAHN,kBAAME,GAAQ,IAGqBH,EAAUJ,KAAK,OAAOQ,KAAK,KAAKlC,SAAUA,EAAxF,UACC,cAACyB,EAAA,EAAOU,KAAR,UACI,cAAC,IAAD,CAAWC,MAAOC,IAAOC,QAASJ,KAAM,OAE5C,cAAC,EAAD,CACInB,KAAMA,EACNI,UAAWW,EACXV,UATO,kBAAMa,GAAQ,IAUrBZ,WAAS,EAJb,SAMKU,Q,SCRJQ,EAAkC,SAAC,GAMO,IALHC,EAKE,EALFA,GACAjD,EAIE,EAJFA,KACAkD,EAGE,EAHFA,OACAC,EAEE,EAFFA,SACAZ,EACE,EADFA,SAEhD,OAAO,eAAC,IAAD,CAAKa,QAAS,GAAIC,IAAK,GAAvB,UACH,cAAC,IAAD,CAASC,GAAE,mBAAcJ,EAAOK,UAAhC,SACI,cAACC,EAAA,EAAD,CAAQC,SAAUP,EAAOQ,OAAOC,MAAOC,QAAM,EAACjB,KAAM,OAExD,eAAC,IAAD,CAAKkB,cAAe,SAApB,UACI,cAAC,IAAD,CAASP,GAAG,IAAZ,SACI,qBAAKtC,UAAWC,IAAQ6C,SAAxB,SAAmCZ,EAAOa,UAAY,IAAMb,EAAOc,aAEvE,cAAC,IAAD,CAASV,GAAE,gBAAWL,GAAtB,SACI,sBAAKjC,UAAWC,IAAQjB,KAAxB,uBAAyCA,UAGjD,cAAC,IAAD,IACCmD,GAAY,cAAC,IAAD,UACT,eAAC,IAAD,WACI,cAACjB,EAAA,EAAD,CAAQC,KAAK,OAAOQ,KAAK,KAAzB,SACI,cAACT,EAAA,EAAOU,KAAR,UAAa,cAAC,IAAD,CAAYC,MAAOC,IAAOC,QAASJ,KAAM,SAE1D,cAAC,EAAD,CACIJ,SAAUA,EACVC,eAAgB,wD,kBCzCvByB,EAAqB,SAAC,GAAgB,IAAfxC,EAAc,EAAdA,SAChC,OAAO,cAAC,IAAD,CAAK2B,QAAS,iBAAkBS,cAAe,QAASK,UAAU,EAAlE,SACH,qBAAKlD,UAAWC,IAAQkD,KAAxB,SACK1C,O,oCCQA2C,EAAoC,SAAC,GAMO,IALrDC,EAKoD,EALpDA,MACAC,EAIoD,EAJpDA,QACAC,EAGoD,EAHpDA,YACAC,EAEoD,EAFpDA,eACAC,EACoD,EADpDA,aAEA,OAAO,eAAC,IAAD,CAAKZ,cAAe,SAApB,UACH,cAAC,IAAD,CAAKK,UAAU,EAAMd,QAAS,EAAGsB,gBAAiB,SAAUC,SAAO,EAAnE,SACI,eAACzC,EAAA,EAAD,CAAQC,KAAK,OAAOQ,KAAK,KAAKP,QAASmC,EAAvC,UACI,cAACrC,EAAA,EAAOG,KAAR,UAAcgC,EAAMO,UAClBN,GAAW,cAACpC,EAAA,EAAOU,KAAR,UAAa,cAAC,IAAD,CAAOC,MAAOC,IAAO+B,OAAQlC,KAAM,OAC5D2B,GAAW,cAACpC,EAAA,EAAOU,KAAR,UAAa,cAAC,IAAD,CAAWC,MAAOC,IAAO+B,OAAQlC,KAAM,YAGxE,cAAC,IAAD,CAAKuB,UAAU,EAAMd,QAAS,EAAGsB,gBAAiB,SAAUC,SAAO,EAAnE,SACI,cAACzC,EAAA,EAAD,CAAQC,KAAK,OAAOQ,KAAK,KAAKP,QAASoC,EAAvC,SACI,cAACtC,EAAA,EAAOU,KAAR,UAAa,cAAC,IAAD,CAAoBC,MAAOC,IAAO+B,OAAQlC,KAAM,WAGrE,cAAC,IAAD,CAAKuB,UAAU,EAAMd,QAAS,EAAGsB,gBAAiB,SAAUC,SAAO,EAAnE,SACI,cAACzC,EAAA,EAAD,CAAQC,KAAK,OAAOQ,KAAK,KAAKP,QAASqC,EAAvC,SACI,cAACvC,EAAA,EAAOU,KAAR,UAAa,cAAC,IAAD,CAAWC,MAAOC,IAAO+B,OAAQlC,KAAM,e,oFCArDmC,EArBiC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,aAAmC,IAArBtE,gBAAqB,SAC3EuE,EAAiBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,KAAKC,QAMpE,OAAO,cAACC,EAAA,EAAD,CAAMC,SAJS,SAACC,GACnBR,EAAaQ,EAAKpB,OAGgBqB,cAAe,CAACrB,KAAM,IAAKsB,kBAAkB,EAA5E,SACH,eAACJ,EAAA,EAAD,WACI,qBAAKrE,UAAWC,IAAQyC,OAAxB,SAEI,cAAC,IAAD,CAASJ,GAAE,0BAAc0B,QAAd,IAAcA,OAAd,EAAcA,EAAgBzB,UAAYmC,SAAUjF,GAAY,OAAIkF,EAA/E,SACI,cAACnC,EAAA,EAAD,CAAQC,SAAQ,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAgBtB,OAAOC,MAAOhB,KAAM,SAG9D,cAACiD,EAAA,EAAD,CAAWxF,KAAM,OAAQM,YAAa,kBAAmBD,SAAUA,IACnE,cAACyB,EAAA,EAAD,CAAQzB,SAAUA,EAAlB,SAA4B,cAACyB,EAAA,EAAOG,KAAR,0B,yBCd3BwD,EAAmC,SAAC,GASO,IARHC,EAQE,EARFA,IACA5C,EAOE,EAPFA,OACAiB,EAME,EANFA,KACA4B,EAKE,EALFA,UAEAC,GAGE,EAJF3B,MAIE,EAHF2B,kBACAzD,EAEE,EAFFA,SAEE,IADF9B,gBACE,SAK7C0C,EAAW6C,IAAqB9C,EAAO4C,IAE7C,OAAO,eAAC,IAAD,CAAK1C,QAAS,YAAaS,cAAe,SAAUR,IAAK,GAAIa,UAAU,EAAvE,UACC,cAAC,IAAD,CAASZ,GAAE,mBAAcJ,EAAOK,UAAYmC,SAAUjF,GAAY,OAAIkF,EAAtE,SACI,cAACnC,EAAA,EAAD,CAAQC,SAAUP,EAAOQ,OAAOC,MAAOhB,KAAM,OAEjD,eAAC,IAAD,CAAKU,IAAK,EAAV,UACI,cAAC,IAAD,CAASC,GAAE,mBAAcJ,EAAOK,UAAYmC,SAAUjF,GAAY,OAAIkF,EAAtE,SACI,sBAAK3E,UAAWC,IAAQiC,OAAxB,UAAiCA,EAAOa,UAAxC,IAAoDb,EAAOc,cAE/D,qBAAKhD,UAAWC,IAAQjB,KAAxB,SAA+BD,YAAWgG,QAE9C,qBAAK/E,UAAWC,IAAQkD,KAAxB,SACKA,IAEL,cAAC,IAAD,IACA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAACjC,EAAA,EAAD,CAAQC,KAAK,OAAOQ,KAAK,KAAKlC,SAAUA,EAAxC,SACI,cAACyB,EAAA,EAAOU,KAAR,UAAa,cAAC,IAAD,CAAOC,MAAOC,IAAO+B,OAAQlC,KAAM,SAEnDQ,GAAY,cAACjB,EAAA,EAAD,CAAQC,KAAK,OAAOQ,KAAK,KAAKlC,SAAUA,EAAxC,SACT,cAACyB,EAAA,EAAOU,KAAR,UAAa,cAAC,IAAD,CAAYC,MAAOC,IAAOC,QAASJ,KAAM,SAEzDQ,GAAY,cAAC,EAAD,CACTZ,SA7BE,WAClBA,EAASuD,IA6BOtD,eAAgB,2CAChB/B,SAAUA,aCjDrBwF,EAAsC,SAAC,GAGoB,IAFhBxE,EAEe,EAFfA,SACAyE,EACe,EADfA,MACAzF,EAAe,EAAfA,SACpD,OAAO,uCACAyF,GAAS,cAAC,IAAD,CAAS5C,GAAI4C,EAAOR,SAAUjF,GAAY,OAAIkF,EAA9C,SACR,cAACzD,EAAA,EAAD,CAAQC,KAAM,OAAQ1B,SAAUA,EAAhC,SAA0C,cAACyB,EAAA,EAAOG,KAAR,UAAcZ,GAAY,mBAGtEyE,GAAS,cAAChE,EAAA,EAAD,CAAQC,KAAM,OAAQ1B,SAAUA,EAAhC,SACP,cAACyB,EAAA,EAAOG,KAAR,UAAcZ,GAAY,oBCPzB0E,EAA+C,SAAC,GAMO,IALHC,EAKE,EALFA,OACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,OACAN,EAEE,EAFFA,iBACAzD,EACE,EADFA,SAE7D,OAAO,qCACF8D,EACIE,QACAC,UACAD,MAAM,EAAG,GACTE,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,2BAERA,GAFQ,IAGZV,iBAAkBA,EAClBzD,SAAUA,EACV9B,UAAW2F,IAJNM,EAAQZ,QAOpBO,EAASzB,OAAS,GAAK,cAAC,IAAD,CAAKxB,QAAS,EAAGsB,gBAAiB,SAAUR,UAAU,EAAtD,SACpB,cAAC,EAAD,CAAgBgC,MAAK,gBAAWI,GAAU7F,UAAW2F,UCjBpDO,EAAoC,SAAC,GAOO,IANHP,EAME,EANFA,OACAE,EAKE,EALFA,OACAN,EAIE,EAJFA,iBACAK,EAGE,EAHFA,SACAO,EAEE,EAFFA,kBACAC,EACE,EADFA,qBAElD,OAAO,sBAAK7F,UAAW8F,IACnB7F,IAAQoF,SADqB,eAE3BpF,IAAQmF,OAASA,IAFhB,UAIH,cAAC,IAAD,CAAKhD,QAAS,YAAac,UAAU,EAArC,SACI,cAAC,EAAD,CAAoBa,aAAc6B,EAAmBnG,UAAW2F,MAGpE,cAAC,EAAD,CACIA,OAAQA,EACRC,SAAUA,EACVC,OAAQA,EACRN,iBAAkBA,EAClBzD,SAAUsE,QCuDPE,IAzEmB,SAAC,GAQO,IAPHC,EAOE,EAPFA,KACAC,EAME,EANFA,aACAC,EAKE,EALFA,cACAC,EAIE,EAJFA,iBACAnB,EAGE,EAHFA,iBACAjB,EAEE,EAFFA,aACAqC,EACE,EADFA,gBAEnC,EAAwD3E,oBAAS,GAAjE,mBAAO4E,EAAP,KAA6BC,EAA7B,KACMnE,EAAW6C,IAAqBgB,EAAK9D,OAAO4C,IAC5C9F,EAAOD,YAAWiH,EAAKjB,WACvBzB,IAAU0B,GAAmBgB,EAAK3C,MAAMoC,KAAI,SAAArB,GAAI,OAAIA,EAAKU,OAAKyB,SAASvB,GA0B7E,OACI,eAACwB,EAAA,EAAD,WACI,cAAC,EAAD,CACIvE,GAAI+D,EAAKlB,IACT9F,KAAMA,EACNmD,SAAUA,EACVD,OAAQ8D,EAAK9D,OACbX,SA/Bc,WAClB0E,GAAcA,EAAaD,EAAKlB,QAiChC,cAAC,EAAD,UACKkB,EAAK7C,OAGV,cAAC,EAAD,CACIE,MAAO2C,EAAK3C,MACZC,QAASA,EACTC,YArCO,WACVD,EAGG6C,GAAkBA,EAAiBH,EAAKlB,KAFxCoB,GAAeA,EAAcF,EAAKlB,MAoClCtB,eAtBiB,WACF8C,GAAvBD,IAsBQ5C,aAAc,kBAAMgD,QAAQC,IAAI,oBAGpC,cAAC,EAAD,CACIpB,OAAQU,EAAKlB,IACbE,iBAAkBA,EAClBK,SAAUW,EAAKX,SACfD,OAAQiB,EACRT,kBAvCc,SAACzC,GACvBY,EAAaiC,EAAKlB,IAAK3B,IAuCf0C,qBApCiB,SAACc,GAC1BP,EAAgBO,W,iCCnDxB,2DAkBMC,EAAwB,SAAC,GAQO,IAPHC,EAOE,EAPFA,MACAZ,EAME,EANFA,aACAE,EAKE,EALFA,iBACAnB,EAIE,EAJFA,iBACAkB,EAGE,EAHFA,cACAnC,EAEE,EAFFA,aACAqC,EACE,EADFA,gBAE/B,OAAO,qBAAKpG,UAAWC,IAAQ6G,QAAxB,SAECD,EAAMtB,QAAQC,UAAUC,KAAI,SAAAO,GAAI,OAAI,cAAC,IAAD,CAEhCA,KAAMA,EACNC,aAAcA,EACdE,iBAAkBA,EAClBD,cAAeA,EACflB,iBAAkBA,EAClBjB,aAAcA,EACdqC,gBAAiBA,GAPZJ,EAAKlB,WAgDXiC,IAnC6C,SAAC,GAAa,IAAZF,EAAW,EAAXA,MACpDG,EAAWC,cACXjC,EAAmBf,aAAY,SAACC,GAAD,uBAAsBA,EAAMC,KAAKC,YAAjC,aAAsB,EAAiBU,OAuB5E,OAAO,cAAC8B,EAAD,CAAMC,MAAOA,EACPX,cAtBc,SAACZ,GACxB0B,EAASE,YAAY5B,KAsBZa,iBAnBiB,SAACb,GAC3B0B,EAASG,YAAe7B,KAmBfvB,aAXa,SAACuB,EAAgBnC,GACvC6D,EAASI,YAAe9B,EAAQnC,KAWvBiD,gBATgB,SAACO,GAC1BK,EAASK,YAAkBV,KASlBV,aAlBa,SAACX,GACvB0B,EAASM,YAAWhC,KAkBXN,iBAAkBA,M,qEC1EnC,SAASuC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUhE,OAAQ+D,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,IAAY,OAAOJ,GAAkBH,EAASW,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnED,EAEzF,SAAuCG,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DD,EAAS,GAAQY,EAAad,OAAOe,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAW1E,OAAQ+D,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,EAFxMe,CAA8BZ,EAAQQ,GAAuB,GAAIb,OAAOkB,sBAAuB,CAAE,IAAIC,EAAmBnB,OAAOkB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiB/E,OAAQ+D,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBN,OAAOO,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,IAAU,OAAOJ,EAMne,IAAImB,EAAqBC,sBAAW,SAAUC,EAAMC,GAClD,IAAInH,EAAQkH,EAAKlH,MACbF,EAAOoH,EAAKpH,KACZsH,EAAOb,EAAyBW,EAAM,CAAC,QAAS,SAEpD,OAAoBG,IAAMC,cAAc,MAAO5B,EAAS,CACtDyB,IAAKA,EACLI,MAAO,6BACPC,QAAS,YACTC,MAAO3H,EACP4H,OAAQ5H,EACR6H,KAAM3H,GACLoH,GAAoBC,IAAMC,cAAc,OAAQ,CACjDM,EAAG,oDACYP,IAAMC,cAAc,OAAQ,CAC3CM,EAAG,oNAGPZ,EAAMa,UAAY,CAChB7H,MAAO8H,IAAUC,OACjBjI,KAAMgI,IAAUE,UAAU,CAACF,IAAUC,OAAQD,IAAUG,UAEzDjB,EAAMkB,aAAe,CACnBlI,MAAO,eACPF,KAAM,OAEOkH,Q,yECYAmB,IA/B+B,WAC1C,IAAMC,EAAmBhG,aAAY,SAACC,GAAD,OAAsBA,EAAM2C,MAAMoD,oBAEjEjD,EAAWC,cAWjB,OACI,cAACT,EAAA,EAAD,UACI,eAACnC,EAAA,EAAD,CAAMC,SAPU,SAAC4F,GACrB,IAAOC,EAAeD,EAAfC,YACPnD,EAASoD,YAAQD,KAKoB3F,cAAe,CAAC2F,YAAa,IAAK1F,kBAAkB,EAArF,UACI,cAACtF,EAAA,EAAD,CAAeC,KAAM,cAAeM,YAAa,sCACjD,sBAAKM,UAAWC,IAAQoK,SAAxB,UACI,cAACnJ,EAAA,EAAD,CAAQE,QAfQ,SAACkJ,GAC7BA,EAAEC,iBACF9D,QAAQC,IAAI,+BAa0CvF,KAAK,OAAOQ,KAAK,KAA3D,SACI,cAACT,EAAA,EAAOU,KAAR,UAAa,cAAC,EAAD,CAAOC,MAAO,UAAWF,KAAM,SAEhD,cAACT,EAAA,EAAD,CAAQC,KAAK,UAAUQ,KAAK,KAAK6I,QAASP,EAA1C,SACI,cAAC/I,EAAA,EAAOG,KAAR,+B,oBCrCxBhB,EAAOC,QAAU,CAAC,KAAO,+BAA+B,SAAW,qC,oBCAnED,EAAOC,QAAU,CAAC,KAAO","file":"static/js/2.3b2743e2.chunk.js","sourcesContent":["import moment from 'moment'\n\nexport const capitalize = (sourceString: string): string => {\n    return sourceString.charAt(0).toUpperCase() + sourceString.slice(1)\n}\n\nexport const formatDate = (date: Date | string, format: string = 'DD.MM.YYYY') => {\n    return moment(date).format(format)\n}\n\n","import {Controller, RegisterOptions} from 'react-hook-form'\nimport {Control} from 'react-hook-form/dist/types/form'\nimport React from 'react'\nimport classes from './InputTextarea.module.scss'\nimport {Item} from 'components/_shared/Form/Form'\n\nexport type InputTextareaPropsType = {\n    name: string,\n    label?: string,\n    placeholder?: string,\n    rules?: RegisterOptions,\n    control?: Control,\n    rows?: number,\n    disabled?: boolean\n}\nexport const InputTextarea: React.FC<InputTextareaPropsType> = ({\n                                                                    name,\n                                                                    label,\n                                                                    rules,\n                                                                    control,\n                                                                    rows = 2,\n                                                                    disabled = false,\n    placeholder\n                                                                }) => {\n    return <Controller\n        control={control}\n        name={name}\n        rules={rules}\n        render={({field, fieldState}) => <Item label={label} required={!!rules?.required} error={fieldState.error}\n                                               disabled={disabled}>\n            <textarea\n                className={`${classes.textarea} ${fieldState.error ? classes.error : ''}`}\n                name={field.name}\n                value={field.value}\n                onChange={field.onChange}\n                rows={rows}\n                disabled={disabled}\n                placeholder={placeholder}\n            />\n        </Item>}\n    />\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"InputTextarea_dark__1Bvup\",\"textarea\":\"InputTextarea_textarea__3KxMk\",\"error\":\"InputTextarea_error__lL7Wo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostHeader_dark__pjQLY\",\"userName\":\"PostHeader_userName__2YXtN\",\"date\":\"PostHeader_date__3zA_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"ConfirmPopup_dark__2y3YS\",\"question\":\"ConfirmPopup_question__3Kzew\",\"buttons\":\"ConfirmPopup_buttons__3ECl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostText_dark__ialK7\",\"text\":\"PostText_text__1HhJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostComments_dark__2sxGn\",\"comments\":\"PostComments_comments__2UDJ9\",\"active\":\"PostComments_active__ADYYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"AddPostCommentForm_dark__FAmPE\",\"avatar\":\"AddPostCommentForm_avatar__yTG42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostComment_dark__2hJca\",\"author\":\"PostComment_author__1TTdq\",\"date\":\"PostComment_date__2pUUD\"};","import React from 'react'\nimport classes from './ConfirmPopup.module.scss'\nimport {Button} from 'components/_shared/Button/Button'\nimport {ModalWindow} from 'components/_shared/ModalWindow/ModalWindow'\n\ntype ConfirmPopupPropsType = {\n    open: boolean\n    confirmButtonText?: string\n    declineButtonText?: string\n    onConfirm: () => void\n    onDecline: () => void\n    important?: boolean\n}\nexport const ConfirmPopup: React.FC<ConfirmPopupPropsType> = ({\n                                                           open,\n                                                           children,\n                                                           confirmButtonText = 'Ok',\n                                                           declineButtonText = 'Cancel',\n                                                           onConfirm,\n                                                           onDecline,\n                                                           important = false\n                                                       }) => {\n    return (<ModalWindow open={open}>\n        <div>\n            <div className={classes.question}>{children}</div>\n            <div className={classes.buttons}>\n                <Button type={important ? 'cancel' : 'primary'} onClick={onConfirm}>\n                    <Button.Text>{confirmButtonText}</Button.Text>\n                </Button>\n                <Button type={important ? 'primary' : 'secondary'} onClick={onDecline}>\n                    <Button.Text>{declineButtonText}</Button.Text>\n                </Button>\n            </div>\n        </div>\n    </ModalWindow>)\n}","import React, {useState} from 'react'\nimport {Button} from 'components/_shared/Button/Button'\nimport {TrashFill} from 'react-bootstrap-icons'\nimport colors from 'assets/styles/colors.module.scss'\nimport {ConfirmPopup} from 'components/_shared/ConfirmPopup/ConfirmPopup'\n\ntype DeleteButtonType = {\n    disabled?: boolean\n    warningMessage?: string\n    onDelete: () => void\n}\nexport const DeleteButton: React.FC<DeleteButtonType> = ({onDelete, warningMessage, disabled= false}) => {\n    const [open, setOpen] = useState(false)\n    const openModal = () => setOpen(true)\n    const closeModal = () => setOpen(false)\n\n    return <Button onClick={warningMessage ? openModal : onDelete} type=\"text\" size=\"sm\" disabled={disabled}>\n            <Button.Icon>\n                <TrashFill color={colors.textMid} size={16}/>\n            </Button.Icon>\n            <ConfirmPopup\n                open={open}\n                onConfirm={onDelete}\n                onDecline={closeModal}\n                important\n            >\n                {warningMessage}\n            </ConfirmPopup>\n        </Button>\n\n}\n","import React from 'react'\nimport classes from './PostHeader.module.scss'\nimport {UserItemDataType} from 'types/types'\nimport {NavLink} from 'react-router-dom'\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\nimport {Col, Row, Space} from 'components/_shared/Flex/Flex'\nimport {DeleteButton} from 'components/_shared/Button/DeleteButton/DeleteButton'\nimport {Button} from '../../_shared/Button/Button'\nimport {PencilFill} from 'react-bootstrap-icons'\nimport colors from '../../../assets/styles/colors.module.scss'\n\ntype PropsType = {\n    id: string\n    date: string\n    author: UserItemDataType\n    isAuthor: boolean\n    onDelete: () => void\n}\nexport const PostHeader: React.FC<PropsType> = ({\n                                                    id,\n                                                    date,\n                                                    author,\n                                                    isAuthor,\n                                                    onDelete\n                                                }) => {\n    return <Row padding={20} gap={20}>\n        <NavLink to={`/profile/${author.username}`}>\n            <Avatar smallImg={author.avatar.small} online size={50}/>\n        </NavLink>\n        <Col verticalAlign={'center'}>\n            <NavLink to=\"/\">\n                <div className={classes.userName}>{author.firstName + ' ' + author.lastName}</div>\n            </NavLink>\n            <NavLink to={`/post/${id}`}>\n                <div className={classes.date}>posted on {date}</div>\n            </NavLink>\n        </Col>\n        <Space/>\n        {isAuthor && <Col>\n            <Row>\n                <Button type=\"text\" size=\"sm\">\n                    <Button.Icon><PencilFill color={colors.textMid} size={16}/></Button.Icon>\n                </Button>\n                <DeleteButton\n                    onDelete={onDelete}\n                    warningMessage={'Are you sure you want to delete this post?'}\n                />\n            </Row>\n        </Col>}\n    </Row>\n}\n","import React from 'react'\nimport classes from './PostText.module.scss'\nimport {Row} from 'components/_shared/Flex/Flex'\n\nexport const PostText: React.FC = ({children}) => {\n    return <Row padding={'10px 40px 30px'} verticalAlign={'start'} bordered={true}>\n        <div className={classes.text}>\n            {children}\n        </div>\n    </Row>\n}\n","import React from 'react'\nimport {Button} from 'components/_shared/Button/Button'\nimport {ChatSquareTextFill, Heart, HeartFill, ShareFill} from 'react-bootstrap-icons'\nimport colors from 'assets/styles/colors.module.scss'\nimport {UserItemDataType} from 'types/types'\nimport {Col, Row} from '../../_shared/Flex/Flex'\n\ntype PropsType = {\n    likes: UserItemDataType[]\n    isLiked: boolean,\n    onLikeClick: () => void\n    onCommentClick: () => void\n    onShareClick: () => void\n}\n\nexport const PostControls: React.FC<PropsType> = ({\n    likes,\n    isLiked,\n    onLikeClick,\n    onCommentClick,\n    onShareClick\n                                                  }) => {\n    return <Row verticalAlign={'center'}>\n        <Col bordered={true} padding={5} horizontalAlign={'center'} stretch>\n            <Button type=\"text\" size=\"sm\" onClick={onLikeClick}>\n                <Button.Text>{likes.length}</Button.Text>\n                {!isLiked && <Button.Icon><Heart color={colors.accent} size={16}/></Button.Icon>}\n                {isLiked && <Button.Icon><HeartFill color={colors.accent} size={16}/></Button.Icon>}\n            </Button>\n        </Col>\n        <Col bordered={true} padding={5} horizontalAlign={'center'} stretch>\n            <Button type=\"text\" size=\"sm\" onClick={onCommentClick}>\n                <Button.Icon><ChatSquareTextFill color={colors.accent} size={16}/></Button.Icon>\n            </Button>\n        </Col>\n        <Col bordered={true} padding={5} horizontalAlign={'center'} stretch>\n            <Button type=\"text\" size=\"sm\" onClick={onShareClick}>\n                <Button.Icon><ShareFill color={colors.accent} size={16}/></Button.Icon>\n            </Button>\n        </Col>\n    </Row>\n}\n","import React from 'react'\nimport classes from 'components/_forms/AddPostCommentForm/AddPostCommentForm.module.scss'\nimport {Form, FormRow} from 'components/_shared/Form/Form'\nimport {InputText} from 'components/_shared/Input/InputText/InputText'\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\nimport {Button} from 'components/_shared/Button/Button'\nimport {NewCommentType} from 'types/types'\nimport {useSelector} from 'react-redux'\nimport {StateType} from 'redux/store'\nimport {NavLink} from 'react-router-dom'\n\ntype PropsType = {\n    disabled?: boolean,\n    onAddComment: (text: string) => void\n}\n\nconst AddPostCommentForm: React.FC<PropsType> = ({onAddComment, disabled= false}) => {\n    const authorizedUser = useSelector((state: StateType) => state.auth.user)\n\n    const submitHandler = (data: NewCommentType) => {\n        onAddComment(data.text)\n    }\n\n    return <Form onSubmit={submitHandler} initialValues={{text: ''}} resetAfterSubmit={true}>\n        <FormRow>\n            <div className={classes.avatar}>\n                {/*todo add component ButtonLink. Same button but with NavLink*/}\n                <NavLink to={`/profile/${authorizedUser?.username}`} tabIndex={disabled ? -1 : undefined}>\n                    <Avatar smallImg={authorizedUser?.avatar.small} size={30}/>\n                </NavLink>\n            </div>\n            <InputText name={'text'} placeholder={'Write a comment'} disabled={disabled}/>\n            <Button disabled={disabled}><Button.Text>Add</Button.Text></Button>\n        </FormRow>\n    </Form>\n}\n\nexport default AddPostCommentForm","import React from 'react'\nimport classes from 'components/Post/PostComments/PostComment/PostComment.module.scss'\nimport {CommentType} from 'types/types'\nimport {NavLink} from 'react-router-dom'\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\nimport {formatDate} from 'utils/functions'\nimport {Button} from 'components/_shared/Button/Button'\nimport {Heart, PencilFill} from 'react-bootstrap-icons'\nimport colors from 'assets/styles/colors.module.scss'\nimport {Col, Row, Space} from 'components/_shared/Flex/Flex'\nimport {DeleteButton} from 'components/_shared/Button/DeleteButton/DeleteButton'\n\ntype PropsType = CommentType & {\n    disabled: boolean,\n    authorizedUserId?: string\n    onDelete: (commentId: string) => void\n}\n\nexport const PostComment: React.FC<PropsType> = ({\n                                                     _id,\n                                                     author,\n                                                     text,\n                                                     createdAt,\n                                                     likes,\n                                                     authorizedUserId,\n                                                     onDelete,\n                                                     disabled = false\n                                                 }) => {\n    const deleteHandler = () => {\n        onDelete(_id)\n    }\n\n    const isAuthor = authorizedUserId === author._id\n\n    return <Row padding={'10px 20px'} verticalAlign={'center'} gap={10} bordered={true}>\n            <NavLink to={`/profile/${author.username}`} tabIndex={disabled ? -1 : undefined}>\n                <Avatar smallImg={author.avatar.small} size={40}/>\n            </NavLink>\n            <Col gap={2}>\n                <NavLink to={`/profile/${author.username}`} tabIndex={disabled ? -1 : undefined}>\n                    <div className={classes.author}>{author.firstName} {author.lastName}</div>\n                </NavLink>\n                <div className={classes.date}>{formatDate(createdAt)}</div>\n            </Col>\n            <div className={classes.text}>\n                {text}\n            </div>\n            <Space/>\n            <Col>\n                <Row>\n                    <Button type=\"text\" size=\"sm\" disabled={disabled}>\n                        <Button.Icon><Heart color={colors.accent} size={16}/></Button.Icon>\n                    </Button>\n                    {isAuthor && <Button type=\"text\" size=\"sm\" disabled={disabled}>\n                        <Button.Icon><PencilFill color={colors.textMid} size={16}/></Button.Icon>\n                    </Button>}\n                    {isAuthor && <DeleteButton\n                        onDelete={deleteHandler}\n                        warningMessage={'Are you sure you want to delete comment?'}\n                        disabled={disabled}\n                    />}\n                </Row>\n            </Col>\n        </Row>\n}\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {Button} from '../Button'\n\ntype PropsType = {\n    route?: string\n    disabled?: boolean\n    onClick?: () => void\n}\n\nexport const ShowMoreButton: React.FC<PropsType> = ({\n                                                        children,\n                                                        route,\n                                                        disabled }) => {\n    return <>\n        {!!route && <NavLink to={route} tabIndex={disabled ? -1 : undefined}>\n            <Button type={'link'} disabled={disabled}><Button.Text>{children || 'Show more'}</Button.Text></Button>\n        </NavLink>}\n\n        {!route && <Button type={'link'} disabled={disabled}>\n            <Button.Text>{children || 'Show more'}</Button.Text>\n        </Button>}\n    </>\n}\n","import React from 'react'\nimport {CommentType} from '../../../../types/types'\nimport {PostComment} from '../PostComment/PostComment'\nimport {ShowMoreButton} from '../../../_shared/Button/ShowMoreButton/ShowMoreButton'\nimport {Row} from '../../../_shared/Flex/Flex'\n\ntype PostCommentsType = {\n    active: boolean\n    postId: string\n    authorizedUserId?: string\n    onDelete: (commentId: string) => void\n    comments: CommentType[]\n}\nexport const PostCommentsList: React.FC<PostCommentsType> = ({\n                                                                 active,\n                                                                 comments,\n                                                                 postId,\n                                                                 authorizedUserId,\n                                                                 onDelete\n                                                             }) => {\n    return <>\n        {comments\n            .slice()\n            .reverse()\n            .slice(0, 3)\n            .map(comment => <PostComment\n                key={comment._id}\n                {...comment}\n                authorizedUserId={authorizedUserId}\n                onDelete={onDelete}\n                disabled={!active}\n            />)}\n\n        {comments.length > 3 && <Row padding={5} horizontalAlign={'center'} bordered={true}>\n            <ShowMoreButton route={`/post/${postId}`} disabled={!active}/>\n        </Row>}\n    </>\n}\n","import React from 'react'\nimport classes from './PostComments.module.scss'\nimport classnames from 'classnames'\nimport AddPostCommentForm from 'components/_forms/AddPostCommentForm/AddPostCommentForm'\nimport {CommentType} from 'types/types'\nimport {PostCommentsList} from './PostCommentsList/PostCommentsList'\nimport {Row} from '../../_shared/Flex/Flex'\n\ntype PropsType = {\n    active: boolean\n    postId: string\n    authorizedUserId?: string\n    comments: CommentType[]\n    onAddCommentClick: (text: string) => void\n    onDeleteCommentClick: (commentId: string) => void\n}\n\nexport const PostComments: React.FC<PropsType> = ({\n                                                      active,\n                                                      postId,\n                                                      authorizedUserId,\n                                                      comments,\n                                                      onAddCommentClick,\n                                                      onDeleteCommentClick\n                                                  }) => {\n    return <div className={classnames(\n        classes.comments,\n        {[classes.active]: active}\n    )}>\n        <Row padding={'15px 30px'} bordered={true}>\n            <AddPostCommentForm onAddComment={onAddCommentClick} disabled={!active}/>\n        </Row>\n\n        <PostCommentsList\n            active={active}\n            comments={comments}\n            postId={postId}\n            authorizedUserId={authorizedUserId}\n            onDelete={onDeleteCommentClick}\n        />\n    </div>\n}\n","import React, {useState} from 'react'\nimport {Card} from 'components/_shared/Card/Card'\nimport {PostType} from 'types/types'\nimport {formatDate} from 'utils/functions'\nimport {PostHeader} from 'components/Post/PostHeader/PostHeader'\nimport {PostText} from 'components/Post/PostText/PostText'\nimport {PostControls} from 'components/Post/PostControls/PostControls'\nimport {PostComments} from 'components/Post/PostComments/PostComments'\n\n// todo: consider connecting to store here.\ntype PropsType = {\n    post: PostType\n    onPostAddLike: (id: string) => void\n    onPostDeleteLike: (id: string) => void\n    onPostDelete: (id: string) => void\n    authorizedUserId?: string\n    onAddComment: (postId: string, text: string) => void\n    onDeleteComment: (commentId: string) => void\n}\n\nconst Post: React.FC<PropsType> = ({\n                                       post,\n                                       onPostDelete,\n                                       onPostAddLike,\n                                       onPostDeleteLike,\n                                       authorizedUserId,\n                                       onAddComment,\n                                       onDeleteComment\n                                   }) => {\n    const [commentSectionActive, setCommentSectionActive] = useState(false)\n    const isAuthor = authorizedUserId === post.author._id\n    const date = formatDate(post.createdAt)\n    const isLiked = authorizedUserId ? post.likes.map(user => user._id).includes(authorizedUserId) : false\n\n    const postDeleteHandler = () => {\n        if (onPostDelete) onPostDelete(post._id)\n    }\n\n    const toggleLike = () => {\n        if (!isLiked) {\n            if (onPostAddLike) onPostAddLike(post._id)\n        } else {\n            if (onPostDeleteLike) onPostDeleteLike(post._id)\n        }\n    }\n\n    const addCommentHandler = (text: string) => {\n        onAddComment(post._id, text)\n    }\n\n    const deleteCommentHandler = (commentId: string) => {\n        onDeleteComment(commentId)\n    }\n\n    const toggleCommentSection = () => {\n        commentSectionActive ? setCommentSectionActive(false) : setCommentSectionActive(true)\n    }\n\n    return (\n        <Card>\n            <PostHeader\n                id={post._id}\n                date={date}\n                isAuthor={isAuthor}\n                author={post.author}\n                onDelete={postDeleteHandler}\n            />\n\n            <PostText>\n                {post.text}\n            </PostText>\n\n            <PostControls\n                likes={post.likes}\n                isLiked={isLiked}\n                onLikeClick={toggleLike}\n                onCommentClick={toggleCommentSection}\n                onShareClick={() => console.log('share clicked')}\n            />\n\n            <PostComments\n                postId={post._id}\n                authorizedUserId={authorizedUserId}\n                comments={post.comments}\n                active={commentSectionActive}\n                onAddCommentClick={addCommentHandler}\n                onDeleteCommentClick={deleteCommentHandler}\n            />\n\n        </Card>\n    )\n}\n\nexport default Post\n","import React from 'react'\nimport classes from './Feed.module.scss'\nimport Post from 'components/Post/Post'\nimport {PostType} from 'types/types'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {StateType} from 'redux/store'\nimport {addPostComment, addPostLike, deletePost, deletePostComment, deletePostLike} from 'redux/reducers/posts.reducer'\n\ntype Props = {\n    posts: Array<PostType>\n    onPostDelete: (id: string) => void\n    onPostAddLike: (id: string) => void\n    onPostDeleteLike: (id: string) => void\n    authorizedUserId?: string\n    onAddComment: (postId: string, text: string) => void\n    onDeleteComment: (commentId: string) => void\n}\n\nconst Feed: React.FC<Props> = ({\n                                   posts,\n                                   onPostDelete,\n                                   onPostDeleteLike,\n                                   authorizedUserId,\n                                   onPostAddLike,\n                                   onAddComment,\n                                   onDeleteComment\n                               }) => {\n    return <div className={classes.wrapper}>\n        {\n            posts.slice().reverse().map(post => <Post\n                key={post._id}\n                post={post}\n                onPostDelete={onPostDelete}\n                onPostDeleteLike={onPostDeleteLike}\n                onPostAddLike={onPostAddLike}\n                authorizedUserId={authorizedUserId}\n                onAddComment={onAddComment}\n                onDeleteComment={onDeleteComment}\n            />)\n        }\n    </div>\n}\n\nconst FeedContainer: React.FC<{ posts: Array<PostType> }> = ({posts}) => {\n    const dispatch = useDispatch()\n    const authorizedUserId = useSelector((state: StateType) => state.auth.user?._id)\n\n    const postAddLikeHandler = (postId: string) => {\n        dispatch(addPostLike(postId))\n    }\n\n    const postDeleteLikeHandler = (postId: string) => {\n        dispatch(deletePostLike(postId))\n    }\n\n    const postDeleteHandler = (postId: string) => {\n        dispatch(deletePost(postId))\n    }\n\n\n    const addCommentHandler = (postId: string, text: string) => {\n        dispatch(addPostComment(postId, text))\n    }\n    const deleteCommentHandler = (commentId: string) => {\n        dispatch(deletePostComment(commentId))\n    }\n\n\n    return <Feed posts={posts}\n                 onPostAddLike={postAddLikeHandler}\n                 onPostDeleteLike={postDeleteLikeHandler}\n                 onAddComment={addCommentHandler}\n                 onDeleteComment={deleteCommentHandler}\n                 onPostDelete={postDeleteHandler}\n                 authorizedUserId={authorizedUserId}\n    />\n}\n\nexport default FeedContainer","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default Image;","import React from 'react'\nimport {Image} from 'react-bootstrap-icons'\nimport {NewPostType} from 'types/types'\nimport classes from './NewPostInputForm.module.scss'\nimport {Card} from 'components/_shared/Card/Card'\nimport {Button} from 'components/_shared/Button/Button'\nimport {Form} from 'components/_shared/Form/Form'\nimport {InputTextarea} from 'components/_shared/Input/InputTextarea/InputTextarea'\nimport {addPost} from 'redux/reducers/posts.reducer'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {StateType} from 'redux/store'\n\ntype PropsType = {\n}\n\nconst NewPostInputForm: React.FC<PropsType> = () => {\n    const isAddPostPending = useSelector((state: StateType) => state.posts.isAddPostPending)\n\n    const dispatch = useDispatch()\n    const onAttachFileButtonClick = (e: React.MouseEvent) => {\n        e.preventDefault()\n        console.log('Attach file button clicked')\n    }\n\n    const onNewPostSubmit = (newPostData: NewPostType) => {\n        const {newPostText} = newPostData\n        dispatch(addPost(newPostText))\n    }\n\n    return (\n        <Card>\n            <Form onSubmit={onNewPostSubmit} initialValues={{newPostText: ''}} resetAfterSubmit={true}>\n                <InputTextarea name={'newPostText'} placeholder={'Share your thoughts and feelings!'}/>\n                <div className={classes.controls}>\n                    <Button onClick={onAttachFileButtonClick} type=\"text\" size=\"sm\">\n                        <Button.Icon><Image color={'#909BA4'} size={18}/></Button.Icon>\n                    </Button>\n                    <Button type=\"primary\" size=\"sm\" spinner={isAddPostPending}>\n                        <Button.Text>Send</Button.Text>\n                    </Button>\n                </div>\n            </Form>\n        </Card>\n    )\n}\n\nexport default NewPostInputForm","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"NewPostInputForm_dark__2NE5q\",\"controls\":\"NewPostInputForm_controls__ljI9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"Feed_dark__tnEzM\"};"],"sourceRoot":""}
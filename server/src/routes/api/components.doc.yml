components:
  responses:
    Success:
      description: This response indicates that requested operation was successful
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/SuccessfulResponse'
              - type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Success

    Conflict:
      description: The request could not be completed due to a conflict with the current state of the resource
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
              - type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Conflict

    Unauthorized:
      description: Request from unauthorized user
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
              - type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Not authorized

    Forbidden:
      description: User does not have access rights to the content
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
              - type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Forbidden

    NotFound:
      description: The server can not find the requested resource.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
              - type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Not found

    ServerError:
      description: Unknown server error
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponse'
              - type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Internal server error

  requestBodies:
    ImageWithCrop:
      description: "Image file and crop object must be provided. Crop object example: `{ width: number, height: number, x: number, y: number }`"

  schemas:
    SuccessfulResponse:
      type: object
      properties:
        resultCode:
          type: number
          enum:
            - 0
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        resultCode:
          type: number
          enum:
            - 1
        message:
          type: string

    ValidationError:
      type: object
      properties:
        value:
          type: string
        msg:
          type: string
        param:
          type: string
        location:
          type: string

    Avatar:
      type: object
      properties:
        small:
          type: string
          format: uri
        large:
          type: string
          format: uri

    Location:
      type: object
      properties:
        country:
          type: string
        city:
          type: string

    Contacts:
      type: object
      properties:
        website:
          type: string
          format: uri
        vkontakte:
          type: string
          format: uri
        github:
          type: string
          format: uri

    User:
      type: object
      properties:
        _id:
          type: string
          format: id
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          $ref: '#/components/schemas/Avatar'
        subscriptions:
          type: array
          items:
            type: string
            format: id

    UserProfile:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            email:
              type: string
              format: email
            registrationDate:
              type: string
              format: date-time
            isOnline:
              type: boolean
            location:
              $ref: '#/components/schemas/Location'
            contacts:
              $ref: '#/components/schemas/Contacts'
            birthDate:
              type: string
              format: date
            status:
              type: string
            bio:
              type: string
            coverImage:
              type: string
              format: uri

    UserProfileUpdatePayload:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        bio:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        contacts:
          $ref: '#/components/schemas/Contacts'

    Profile:
      type: object
      properties:


    ImageWithCrop:
      type: object
      properties:
        image:
          type: File
        crop:
          type: object
          properties:
            width:
              type: number
            height:
              type: number
            x:
              type: number
            y:
              type: number

    Post:
      type: object
      properties:
        _id:
          type: string
        creationDate:
          type: string
          format: date-time
        author:
          $ref: '#/components/schemas/User'
        text:
          type: string
        likes:
          type: array
          items:
            $ref: '#/components/schemas/User'
        comments:
          type: array
          items:
            type: object
            properties:
              creationDate:
                type: string
                format: date-time
              author:
                $ref: '#/components/schemas/User'
              text:
                type: string
              likes:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    Dialog:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        companionUser:
          $ref: '#/components/schemas/User'

    Message:
      type: object
      properties:
        _id:
          type: string
        date:
          type: string
          format: date-time
        author:
          $ref: '#/components/schemas/User'
        text:
          type: string
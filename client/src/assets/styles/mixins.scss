@mixin button-colors($color, $bg-color) {
  color: $color;
  background-color: $bg-color;
  &:hover {
    background-color: lighten($bg-color, 5%);
  }
  &:active {
    background-color: darken($bg-color, 5%);
  }
  &.spinner {
    &, &:hover, &:active {
      color: $color;
      background-color: $bg-color;
    }
  }
}

@mixin input-style {
  input {
    padding: .5em;  // needed for date input
  }
  position: relative;
  line-height: 1em;
  height: 2em;
  padding: .75em;
  background: $input-background-color;
  border: 1px solid $app-border-color;
  border-radius: $ui-border-radius;
  width: 100%;
  -webkit-box-shadow: inset 0 0 0 50px $input-background-color;
  color: $text-color-dark;
  $placeholder-color: $input-placeholder-color;
  transition: $ui-transition;
  @include focus;
  &.error {
    border-color: $input-error-color;
  }
  &:disabled {
    background-color: darken($input-background-color, 5%);
  }
  &::-webkit-input-placeholder {
    color: $placeholder-color;
  }
  &::-moz-placeholder {
    color: $placeholder-color;
  }
  &::-ms-placeholder {
    color: $placeholder-color;
  }
  &::placeholder {
    color: $placeholder-color;
  }
}

@mixin ui-form-item-label-font {
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 1px;
}

@mixin focus {
  outline: none;
  &:-moz-focusring {
    outline: none;
  }
  box-shadow: 0 0 0 2px rgba($app-focus-color, 0) inset;
  &:focus {
    border-color: transparent;
    box-shadow: 0 0 0 2px rgba($app-focus-color, 1) inset;
  }
  &:focus-visible {
    border-color: transparent;
    box-shadow: 0 0 0 2px rgba($app-focus-color, 1) inset;
  }
}

@mixin focus-checkbox {
  outline: none;
  box-shadow: 0 0 0 2px rgba($app-focus-color, 0) inset;
  &:focus + .box{
    box-shadow: 0 0 0 2px rgba($app-focus-color, 1) inset;
  }
}


$breakpoints: (
        "phone":        $phone,
        "phone-wide":   $phone-wide,
        "phone-tablet": $phone-tablet,
        "tablet-small": $tablet-small,
        "tablet":       $tablet,
        "tablet-wide":  $tablet-wide,
        "desktop":      $desktop,
        "desktop-wide": $desktop-wide
);
@mixin mq($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
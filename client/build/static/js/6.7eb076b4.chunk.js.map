{"version":3,"sources":["hooks/useTypedSelector.ts","hooks/useAuth.ts","components/_shared/Input/InputTextarea/InputTextarea.tsx","components/_shared/Input/InputTextarea/InputTextarea.module.scss","components/_forms/NewPostInputForm/NewPostInputForm.tsx","components/_forms/NewPostInputForm/NewPostInputForm.module.scss","components/Feed/Feed.tsx","components/Feed/Feed.module.scss","components/Profile/ProfileCoverImage/ProfileCoverImage.module.scss","components/Profile/ProfileHeader/ProfileHeader.module.scss","components/_shared/Input/InputDate/InputDate.module.scss","components/_shared/OnlineIndicator/OnlineIndicator.module.scss","components/Profile/ProfileInfoData/ProfileInfoData.module.scss","assets/images/cover-default.jpg","components/Profile/ProfileCoverImage/ProfileCoverImage.tsx","components/_forms/EditStatusForm.tsx","components/_shared/Input/InputDate/InputDate.tsx","hooks/useWindowDimensions.ts","components/_forms/EditProfileForm.tsx","components/_shared/OnlineIndicator/OnlineIndicator.tsx","components/Profile/ProfileHeader/ProfileHeader.tsx","components/Profile/ProfileInfoData/ProfileInfoData.tsx","components/Profile/Profile.tsx","components/_pages/ProfilePage.tsx"],"names":["useTypedSelector","useSelector","useAuth","dispatch","useDispatch","useEffect","getAuthUserData","state","auth","authorized","InputTextarea","name","label","rules","control","rows","disabled","placeholder","render","field","fieldState","required","error","className","classes","textarea","value","onChange","module","exports","NewPostInputForm","isAddPostPending","posts","onSubmit","newPostData","newPostText","addPost","initialValues","resetAfterSubmit","controls","onClick","e","preventDefault","console","log","type","size","Icon","color","spinner","Text","Feed","onPostDelete","onPostDeleteLike","authorizedUserId","onPostAddLike","onAddComment","onDeleteComment","wrapper","slice","reverse","map","post","commentsShown","_id","FeedContainer","user","postId","addPostLike","deletePostLike","text","addPostComment","commentId","deletePostComment","deletePost","ProfileCoverImage","img","defaultCoverImage","owner","onCoverImageSubmit","useState","open","setOpen","tablet","useBreakpoint","openModal","coverImage","editCoverImageButton","Button","width","height","ModalWindow","ImageUploadForm","aspect","closeModal","image","src","alt","EditStatusForm","initialStatus","Form","submitOnBlur","status","submitOnEnter","InputText","autoFocus","CustomDatePicker","Date","date","setDate","dateFormat","calendarStartDay","selected","InputDate","input","getWindowDimensions","window","innerWidth","innerHeight","EditProfileForm","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","viewPortHeight","Number","sizes","appBarHeight","bottomNavHeight","formInputsSectionHeight","data","style","background","paddingBottom","horizontalAlign","marginLeft","EditProfileFormContainer","editProfileData","firstName","profile","lastName","birthDate","bio","location","contacts","profileData","updateProfile","Spinner","OnlineIndicator","children","onlineIndicator","ProfileHeader","online","avatar","onAvatarSubmit","onStatusUpdate","statusEditMode","setStatusEditMode","statusValue","setStatusValue","phoneTablet","profileHeader","Avatar","smallImg","small","largeImg","large","border","shadow","parseInt","avatarProfilePhoneTablet","avatarProfile","onEdit","undefined","profileHeaderInfo","statusEditable","editStatus","editProfile","modal","nested","contentStyle","borderRadius","closeOnDocumentClick","lockScroll","Bio","padding","InfoItem","icon","link","iconSize","item","itemTitle","itemIcon","React","createElement","itemLabel","itemText","href","itemLink","ProfileInfoData","profileInfoData","profileInfoItems","CalendarEvent","formatDate","country","city","GeoAlt","website","Link45deg","Profile","isOwner","Card","checkOnline","updatedAt","ProfilePage","username","useParams","getUserData","getUserPosts","authUser","profileUser","to","Helmet","cropArea","formData","FormData","append","JSON","stringify","updateAvatar","updateCoverImage","updateStatus"],"mappings":"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","file":"static/js/6.7eb076b4.chunk.js","sourcesContent":["import {TypedUseSelectorHook, useSelector} from 'react-redux'\nimport {RootState} from '../store/store'\n\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n\nexport default useTypedSelector\n","import {useDispatch} from 'react-redux'\nimport {useEffect} from 'react'\nimport {getAuthUserData} from '../store/reducers/auth.reducer'\nimport useTypedSelector from './useTypedSelector'\n\nexport const useAuth = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getAuthUserData())\n    }, [dispatch])\n\n    return useTypedSelector(state => state.auth.authorized)\n}\n","import {Controller, RegisterOptions} from 'react-hook-form'\nimport {Control} from 'react-hook-form/dist/types/form'\nimport React from 'react'\nimport classes from './InputTextarea.module.scss'\nimport {Item} from 'components/_shared/Form/Form'\n\nexport type InputTextareaPropsType = {\n    name: string,\n    label?: string,\n    placeholder?: string,\n    rules?: RegisterOptions,\n    control?: Control,\n    rows?: number,\n    disabled?: boolean\n}\nexport const InputTextarea: React.FC<InputTextareaPropsType> = ({\n                                                                    name,\n                                                                    label,\n                                                                    rules,\n                                                                    control,\n                                                                    rows = 2,\n                                                                    disabled = false,\n    placeholder\n                                                                }) => {\n    return <Controller\n        control={control}\n        name={name}\n        rules={rules}\n        render={({field, fieldState}) => <Item label={label} required={!!rules?.required} error={fieldState.error}\n                                               disabled={disabled}>\n            <textarea\n                className={`${classes.textarea} ${fieldState.error ? classes.error : ''}`}\n                name={field.name}\n                value={field.value}\n                onChange={field.onChange}\n                rows={rows}\n                disabled={disabled}\n                placeholder={placeholder}\n            />\n        </Item>}\n    />\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"InputTextarea_dark__1Bvup\",\"textarea\":\"InputTextarea_textarea__3KxMk\",\"error\":\"InputTextarea_error__lL7Wo\"};","import React from 'react'\nimport {Image} from 'react-bootstrap-icons'\nimport {NewPostType} from 'types/types'\nimport classes from './NewPostInputForm.module.scss'\nimport {Card} from 'components/_shared/Card/Card'\nimport {Button} from 'components/_shared/Button/Button'\nimport {Form} from 'components/_shared/Form/Form'\nimport {InputTextarea} from 'components/_shared/Input/InputTextarea/InputTextarea'\nimport {addPost} from 'store/reducers/posts.reducer'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {RootState} from 'store/store'\n\ntype PropsType = {\n}\n\nconst NewPostInputForm: React.FC<PropsType> = () => {\n    const isAddPostPending = useSelector((state: RootState) => state.posts.isAddPostPending)\n\n    const dispatch = useDispatch()\n    const onAttachFileButtonClick = (e: React.MouseEvent) => {\n        e.preventDefault()\n        console.log('Attach file button clicked')\n    }\n\n    const onNewPostSubmit = (newPostData: NewPostType) => {\n        const {newPostText} = newPostData\n        dispatch(addPost(newPostText))\n    }\n\n    return (\n        <Card>\n            <Form onSubmit={onNewPostSubmit} initialValues={{newPostText: ''}} resetAfterSubmit={true}>\n                <InputTextarea name={'newPostText'} placeholder={'Share your thoughts and feelings!'}/>\n                <div className={classes.controls}>\n                    <Button onClick={onAttachFileButtonClick} type=\"text\" size=\"sm\">\n                        <Button.Icon><Image color={'#909BA4'} size={18}/></Button.Icon>\n                    </Button>\n                    <Button type=\"primary\" size=\"sm\" spinner={isAddPostPending}>\n                        <Button.Text>Send</Button.Text>\n                    </Button>\n                </div>\n            </Form>\n        </Card>\n    )\n}\n\nexport default NewPostInputForm\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"NewPostInputForm_dark__2NE5q\",\"controls\":\"NewPostInputForm_controls__ljI9C\"};","import React from 'react'\nimport classes from './Feed.module.scss'\nimport Post from 'components/Post/Post'\nimport {PostType} from 'types/types'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {RootState} from 'store/store'\nimport {addPostComment, addPostLike, deletePost, deletePostComment, deletePostLike} from 'store/reducers/posts.reducer'\n\ntype Props = {\n    posts: Array<PostType>\n    onPostDelete: (id: string) => void\n    onPostAddLike: (id: string) => void\n    onPostDeleteLike: (id: string) => void\n    authorizedUserId?: string\n    onAddComment: (postId: string, text: string) => void\n    onDeleteComment: (commentId: string) => void\n}\n\nconst Feed: React.FC<Props> = ({\n                                   posts,\n                                   onPostDelete,\n                                   onPostDeleteLike,\n                                   authorizedUserId,\n                                   onPostAddLike,\n                                   onAddComment,\n                                   onDeleteComment\n                               }) => {\n    return <div className={classes.wrapper}>\n        {\n            posts.slice().reverse().map(post => <Post\n                key={post._id}\n                post={post}\n                commentsShown={3}\n                onPostDelete={onPostDelete}\n                onPostDeleteLike={onPostDeleteLike}\n                onPostAddLike={onPostAddLike}\n                authorizedUserId={authorizedUserId}\n                onAddComment={onAddComment}\n                onDeleteComment={onDeleteComment}\n            />)\n        }\n    </div>\n}\n\nconst FeedContainer: React.FC<{ posts: Array<PostType> }> = ({posts}) => {\n    const dispatch = useDispatch()\n    const authorizedUserId = useSelector((state: RootState) => state.auth.user?._id)\n\n    const postAddLikeHandler = (postId: string) => {\n        dispatch(addPostLike(postId))\n    }\n\n    const postDeleteLikeHandler = (postId: string) => {\n        dispatch(deletePostLike(postId))\n    }\n\n    const postDeleteHandler = (postId: string) => {\n        dispatch(deletePost(postId))\n    }\n\n\n    const addCommentHandler = (postId: string, text: string) => {\n        dispatch(addPostComment(postId, text))\n    }\n    const deleteCommentHandler = (commentId: string) => {\n        dispatch(deletePostComment(commentId))\n    }\n\n\n    return <Feed posts={posts}\n                 onPostAddLike={postAddLikeHandler}\n                 onPostDeleteLike={postDeleteLikeHandler}\n                 onAddComment={addCommentHandler}\n                 onDeleteComment={deleteCommentHandler}\n                 onPostDelete={postDeleteHandler}\n                 authorizedUserId={authorizedUserId}\n    />\n}\n\nexport default FeedContainer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"Feed_dark__tnEzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"ProfileCoverImage_dark__n8JPv\",\"coverImage\":\"ProfileCoverImage_coverImage__2MPHr\",\"image\":\"ProfileCoverImage_image__2vKCI\",\"editCoverImageButton\":\"ProfileCoverImage_editCoverImageButton__3D_ev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"ProfileHeader_dark__1JQK0\",\"profileHeader\":\"ProfileHeader_profileHeader__2ZqRq\",\"avatar\":\"ProfileHeader_avatar__2W5BG\",\"onlineIndicator\":\"ProfileHeader_onlineIndicator__2MatG\",\"profileHeaderInfo\":\"ProfileHeader_profileHeaderInfo__3G2TW\",\"editProfile\":\"ProfileHeader_editProfile__3QyRd\",\"name\":\"ProfileHeader_name__eC-9E\",\"status\":\"ProfileHeader_status__3eFw5\",\"statusEditable\":\"ProfileHeader_statusEditable__1zcT5\",\"editStatus\":\"ProfileHeader_editStatus__3STSD\",\"editStatusButton\":\"ProfileHeader_editStatusButton__1nMSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"InputDate_dark__3gKUv\",\"input\":\"InputDate_input__3xeov\",\"error\":\"InputDate_error__3_4n0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"OnlineIndicator_dark__1WoiS\",\"onlineIndicator\":\"OnlineIndicator_onlineIndicator__2VEiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"ProfileInfoData_dark__326VZ\",\"profileInfoData\":\"ProfileInfoData_profileInfoData__1E3zZ\",\"bio\":\"ProfileInfoData_bio__21H2f\",\"profileInfoItems\":\"ProfileInfoData_profileInfoItems__Dmg5Y\",\"item\":\"ProfileInfoData_item__1vIbm\",\"itemTitle\":\"ProfileInfoData_itemTitle__1WxFM\",\"itemIcon\":\"ProfileInfoData_itemIcon__1DULG\",\"itemLabel\":\"ProfileInfoData_itemLabel__1r_GY\",\"itemText\":\"ProfileInfoData_itemText__1dXE_\"};","export default __webpack_public_path__ + \"static/media/cover-default.70b51b24.jpg\";","import React, {useEffect, useState} from 'react'\nimport classes from 'components/Profile/ProfileCoverImage/ProfileCoverImage.module.scss'\nimport {Area} from 'react-easy-crop/types'\nimport {CameraFill} from 'react-bootstrap-icons'\nimport defaultCoverImage from 'assets/images/cover-default.jpg'\nimport {Button} from 'components/_shared/Button/Button'\nimport ImageUploadForm from 'components/_forms/ImageUploadForm/ImageUploadForm'\nimport {ModalWindow} from 'components/_shared/ModalWindow/ModalWindow'\nimport {useBreakpoint} from '../../../hooks/useBreakpoint'\n\ntype PropsTypes = {\n    img: string | null\n    owner?: boolean\n    onCoverImageSubmit: (image: File, cropArea: Area) => void\n}\n\n// todo need to figure out how scale cover image preserving aspect-ratio.\nconst ProfileCoverImage: React.FC<PropsTypes> = ({\n                                                     img = defaultCoverImage,\n                                                     owner = false,\n                                                     onCoverImageSubmit\n                                                 }) => {\n    const [open, setOpen] = useState<boolean>(false)\n    const {tablet} = useBreakpoint()\n\n    useEffect(() => {\n        setOpen(false)\n    }, [img])\n    const openModal = () => setOpen(true)\n    const closeModal = () => setOpen(false)\n\n    return (\n        <div className={classes.coverImage}>\n            <div className={classes.editCoverImageButton}>\n                {owner && !tablet && <Button type=\"neutral\" onClick={openModal} size={'sm'}>\n                    <Button.Icon><CameraFill width={15} height={15}/></Button.Icon>\n                    <Button.Text>Edit Cover Image</Button.Text>\n                </Button>}\n                {owner && tablet && <Button type=\"neutral\" onClick={openModal} size={'lg'}>\n                    <Button.Icon><CameraFill width={20} height={20}/></Button.Icon>\n                </Button>}\n            </div>\n            <ModalWindow open={open}>\n                <ImageUploadForm aspect={7 / 2} onSubmit={onCoverImageSubmit} closeModal={closeModal}/>\n            </ModalWindow>\n            <img className={classes.image} src={img ? img : defaultCoverImage} alt={''}/>\n        </div>\n    )\n}\n\nexport default ProfileCoverImage\n","import React from 'react'\nimport {Form} from 'components/_shared/Form/Form'\nimport {InputText} from 'components/_shared/Input/InputText/InputText'\n\ntype PropsType = {\n    onSubmit: (data: { status: string }) => void\n    initialStatus: string\n}\n\nconst EditStatusForm: React.FC<PropsType> = ({onSubmit, initialStatus}) => {\n    return (\n        <Form onSubmit={onSubmit} submitOnBlur={true} initialValues={{status: initialStatus}} submitOnEnter={true}>\n            <InputText name={'status'} autoFocus={true}/>\n        </Form>\n    )\n}\n\n\n\nexport default EditStatusForm\n","import \"react-datepicker/dist/react-datepicker.css\";\nimport './DatePicker.scss'\nimport classes from './InputDate.module.scss'\n\nimport {Controller, RegisterOptions} from 'react-hook-form'\nimport {Control} from 'react-hook-form/dist/types/form'\nimport React, {useState} from 'react'\nimport DatePicker from 'react-datepicker'\nimport {Item} from 'components/_shared/Form/Form'\n\n\ntype CustomDatePickerType = { value: Date, onChange: (date: Date) => void }\nconst CustomDatePicker: React.FC<CustomDatePickerType> = ({value, onChange}) => {\n    const [date, setDate] = useState<Date>(value ? new Date(value) : new Date())\n    const changeHandler = (date: Date) => {\n        onChange(date)\n        setDate(date)\n    }\n\n    return <DatePicker dateFormat=\"dd.MM.yyyy\" calendarStartDay={1} selected={date} onChange={changeHandler}/>\n}\ntype InputDatePropsType = {\n    name: string,\n    label?: string,\n    rules?: RegisterOptions,\n    control?: Control,\n    rows?: number,\n    disabled?: boolean\n}\nexport const InputDate: React.FC<InputDatePropsType> = ({\n                                                            name,\n                                                            label,\n                                                            rules,\n                                                            control,\n                                                            disabled = false\n                                                        }) => {\n\n\n    return <Controller\n        control={control}\n        name={name}\n        rules={rules}\n        render={({field, fieldState}) => <Item label={label} required={!!rules?.required} error={fieldState.error}\n                                               disabled={disabled}>\n            <div className={classes.input}>\n                <CustomDatePicker value={field.value} onChange={field.onChange}/>\n            </div>\n        </Item>}\n    />\n}","import {useEffect, useState} from 'react'\n\nconst getWindowDimensions = (): [number, number] => ([window.innerWidth, window.innerHeight])\nexport const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState<[number, number]>(getWindowDimensions())\n    useEffect(() => {\n        const handleResize = () => setWindowDimensions(getWindowDimensions())\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n\n    return windowDimensions\n}\n","import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {ThunkDispatch} from 'redux-thunk'\nimport {RootState} from 'store/store'\nimport {EditProfileDataType} from 'api/profile.api'\nimport {ProfileActionType, updateProfile} from 'store/reducers/profile.reducer'\nimport Spinner from 'components/_shared/Spinner/Spinner'\nimport {Button} from 'components/_shared/Button/Button'\nimport {Form, FormRow, FormSection} from 'components/_shared/Form/Form'\nimport {InputText} from 'components/_shared/Input/InputText/InputText'\nimport {InputDate} from 'components/_shared/Input/InputDate/InputDate'\nimport {InputTextarea} from 'components/_shared/Input/InputTextarea/InputTextarea'\nimport {Row} from 'components/_shared/Flex/Flex'\nimport sizes from '../../assets/styles/sizes.module.scss'\nimport {useWindowDimensions} from '../../hooks/useWindowDimensions'\nimport {useBreakpoint} from '../../hooks/useBreakpoint'\nimport {useAuth} from '../../hooks/useAuth'\n\ntype PropsType = {\n    initialValues: EditProfileDataType\n    onSubmit: (profileData: EditProfileDataType) => void\n    closeModal?: () => void\n}\n\nconst EditProfileForm: React.FC<PropsType> = ({initialValues, onSubmit, closeModal}) => {\n    const [windowWidth, windowHeight] = useWindowDimensions()\n    const viewPortHeight = windowHeight - Number(sizes.appBarHeight) - Number(sizes.bottomNavHeight)\n    const formInputsSectionHeight = viewPortHeight < 600 ? viewPortHeight : 600\n\n    const submit = (data: EditProfileDataType) => {\n        onSubmit(data)\n        closeModal && closeModal()\n    }\n\n    const backButtonClickHandler = (e: React.MouseEvent) => {\n        e.preventDefault()\n        closeModal && closeModal()\n    }\n\n    return (\n        <Form onSubmit={submit} initialValues={initialValues}>\n            <div style={{background: 'white', paddingBottom: 5}}>\n                <Row horizontalAlign={'space-between'}>\n                    <Button size=\"md\">\n                        <Button.Text>\n                            Save\n                        </Button.Text>\n                    </Button>\n                    <div style={{marginLeft: 'auto'}}>\n                        <Button onClick={backButtonClickHandler} size=\"md\" type='cancel'>\n                            <Button.Text>\n                                Cancel\n                            </Button.Text>\n                        </Button>\n                    </div>\n                </Row>\n            </div>\n            <FormSection height={formInputsSectionHeight}>\n                <FormRow>\n                    <InputText name={'firstName'} label={'First name'} rules={{required: true}}/>\n                </FormRow>\n                <FormRow>\n                    <InputText name={'lastName'} label={'Last name'} rules={{required: true}}/>\n                </FormRow>\n                <FormRow>\n                    <InputDate name={'birthDate'} label={'Birth date'}/>\n                </FormRow>\n                <FormRow>\n                    <InputText name={'location.country'} label={'Country'}/>\n                    <InputText name={'location.city'} label={'City'}/>\n                </FormRow>\n                <FormRow>\n                    <InputTextarea name={'bio'} label={'Bio'} rows={5}/>\n                </FormRow>\n                <FormRow>\n                    <InputText name={'contacts.website'} label={'Website'}/>\n                </FormRow>\n                <FormRow>\n                    <InputText name={'contacts.vkontakte'} label={'Vkontakte'}/>\n                </FormRow>\n                <FormRow>\n                    <InputText name={'contacts.github'} label={'Github'}/>\n                </FormRow>\n            </FormSection>\n        </Form>\n    )\n}\n\nconst EditProfileFormContainer: React.FC<{ closeModal?: () => void }> = ({closeModal}) => {\n    const editProfileData: EditProfileDataType = useSelector((state: RootState) => ({\n        firstName: state.profile.user?.firstName,\n        lastName: state.profile.user?.lastName,\n        birthDate: state.profile.user?.birthDate,\n        bio: state.profile.user?.bio,\n        location: state.profile.user?.location,\n        contacts: state.profile.user?.contacts\n    }))\n    const dispatch: ThunkDispatch<RootState, EditProfileDataType, ProfileActionType> = useDispatch()\n\n    useAuth()\n\n    const onSubmit = (profileData: EditProfileDataType) => {\n        dispatch(updateProfile(profileData))\n    }\n\n    if (!editProfileData) return <Spinner/>\n\n    return <EditProfileForm\n        closeModal={closeModal}\n        initialValues={editProfileData}\n        onSubmit={onSubmit}\n    />\n}\n\nexport default EditProfileFormContainer\n","import React from 'react'\nimport classes from './OnlineIndicator.module.scss'\n\ntype Props = {}\n\nexport const OnlineIndicator: React.FC<Props> = ({children}) => {\n    return <div className={classes.onlineIndicator}>\n        {children}\n    </div>\n}","import React, {useEffect, useState} from 'react'\nimport {Area} from 'react-easy-crop/types'\nimport Popup from 'reactjs-popup'\nimport sizes from 'assets/styles/sizes.module.scss'\nimport classes from 'components/Profile/ProfileHeader/ProfileHeader.module.scss'\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\nimport {AvatarType} from 'types/types'\nimport EditStatusForm from 'components/_forms/EditStatusForm'\nimport EditProfileForm from 'components/_forms/EditProfileForm'\nimport {PencilFill} from 'react-bootstrap-icons'\nimport {Button} from 'components/_shared/Button/Button'\nimport {OnlineIndicator} from 'components/_shared/OnlineIndicator/OnlineIndicator'\nimport {useBreakpoint} from '../../../hooks/useBreakpoint'\n\ntype PropsType = {\n    online?: boolean\n    owner?: boolean\n    firstName: string,\n    lastName: string,\n    status: string | null,\n    avatar: AvatarType\n    onAvatarSubmit?: (image: File, cropArea: Area) => void\n    onStatusUpdate: (status: string) => void\n}\n\nconst ProfileHeader: React.FC<PropsType> = ({\n    online= false,\n                                                owner = false,\n                                                firstName,\n                                                lastName,\n                                                status,\n                                                avatar,\n                                                onAvatarSubmit,\n                                                onStatusUpdate\n                                            }) => {\n    const [statusEditMode, setStatusEditMode] = useState<boolean>(false)\n    const [statusValue, setStatusValue] = useState<string>(status || 'What is your status?')\n    useEffect(() => {\n        setStatusValue(status || 'What is your status?')\n    }, [status])\n\n\n    const statusSubmitHandler = (data: {status: string}) => {\n        onStatusUpdate(data.status)\n        setStatusEditMode(false)\n    }\n    const statusClickHandler = () => {\n        setStatusEditMode(true)\n    }\n\n    const [open, setOpen] = useState(false)\n    const openModal = () => setOpen(true)\n    const closeModal = () => setOpen(false)\n\n    const {tablet, phoneTablet} = useBreakpoint()\n\n    return (\n        <div className={classes.profileHeader}>\n            <div className={classes.avatar}>\n                <button>\n                    <Avatar\n                        smallImg={avatar?.small}\n                        largeImg={avatar?.large}\n                        border shadow size={!phoneTablet ? Number.parseInt(sizes.avatarProfile) : Number.parseInt(sizes.avatarProfilePhoneTablet)}\n                        onEdit={owner ? onAvatarSubmit : undefined }\n                    />\n                </button>\n                {online && <div className={classes.onlineIndicator}>\n                    <OnlineIndicator>Online</OnlineIndicator>\n                </div>}\n            </div>\n            <div className={classes.profileHeaderInfo}>\n                <div className={classes.name}>\n                    {firstName} {lastName}\n                </div>\n                {owner && <div className={classes.status}>\n                    <div className={classes.statusEditable} onClick={statusClickHandler}>{statusValue}</div>\n                    {statusEditMode && <div className={classes.editStatus}>\n                        <EditStatusForm onSubmit={statusSubmitHandler} initialStatus={statusValue}/>\n                    </div>}\n                </div>}\n                {!owner && <div className={classes.status}>{status}</div>}\n            </div>\n            <div className={classes.editProfile}>\n                {owner && <div>\n                    {!tablet && <Button type=\"secondary\" onClick={openModal} size={'sm'}>\n                        <Button.Icon><PencilFill width={!tablet ? 15 : 20} height={!tablet ? 15 : 20}/></Button.Icon>\n                        <Button.Text>Edit profile</Button.Text>\n                    </Button>}\n                    {tablet && <Button type=\"secondary\" onClick={openModal} size={'lg'}>\n                        <Button.Icon><PencilFill width={!tablet ? 15 : 20} height={!tablet ? 15 : 20}/></Button.Icon>\n                    </Button>}\n                    <Popup open={open} modal nested  contentStyle={{borderRadius: 5, }} closeOnDocumentClick={false} lockScroll={true}>\n                            <EditProfileForm closeModal={closeModal}/>\n                    </Popup>\n                </div>\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileHeader\n","import classes from 'components/Profile/ProfileInfoData/ProfileInfoData.module.scss'\nimport React from 'react'\nimport {ContactsType, LocationType} from 'types/types'\nimport {CalendarEvent, GeoAlt, Icon, Link45deg} from 'react-bootstrap-icons'\nimport {formatDate} from 'utils/functions'\nimport {Row} from '../../_shared/Flex/Flex'\n\ntype PropsTypes = {\n    birthDate: string | null\n    location: LocationType\n    contacts: ContactsType\n    bio: string | null\n}\n\nconst ProfileInfoData: React.FC<PropsTypes> = ({\n                                                   birthDate,\n                                                   location,\n                                                   contacts,\n                                                   bio\n                                               }) => {\n    return (\n        <div className={classes.profileInfoData}>\n            {bio && <Bio bio={bio}/>}\n            <div className={classes.profileInfoItems}>\n\n                {!!birthDate && <InfoItem icon={CalendarEvent} iconSize={14}\n                                        label={'Birthday'}>{formatDate(birthDate, 'MMMM, D')}</InfoItem>}\n\n                {!!location?.country && !!location?.city && <InfoItem icon={GeoAlt} iconSize={15}\n                                                                  label={'Location'}>{location.country}, {location.city}</InfoItem>}\n\n                {!!contacts?.website && <InfoItem icon={Link45deg} label={'Website'}\n                                                link={'http://' + contacts.website}>{contacts.website}</InfoItem>}\n\n            </div>\n        </div>\n    )\n}\n\ntype BioPropsType = { bio: string }\nconst Bio: React.FC<BioPropsType> = ({bio}) => <Row padding={'0 0 20px'}>\n    <div className={classes.bio}>{bio}</div>\n</Row>\n\ntype InfoItemType = { icon?: Icon, label?: string, iconSize?: number, link?: string }\nconst InfoItem: React.FC<InfoItemType> = ({\n                                              icon,\n                                              label,\n                                              link,\n                                              iconSize = 16,\n                                              children\n                                          }) => <div className={classes.item}>\n    <div className={classes.itemTitle}>\n        {!!icon && <div className={classes.itemIcon}>{React.createElement(icon, {size: iconSize})}</div>}\n        {!!label && <div className={classes.itemLabel}>{label}</div>}\n    </div>\n    {!link && <span className={classes.itemText}>{children}</span>}\n    {!!link && <a href={link} className={classes.itemLink}>{children}</a>}\n</div>\n\n\nexport default ProfileInfoData\n","import React from 'react'\nimport {Area} from 'react-easy-crop/types'\nimport ProfileCoverImage from 'components/Profile/ProfileCoverImage/ProfileCoverImage'\nimport ProfileInfoHeader from 'components/Profile/ProfileHeader/ProfileHeader'\nimport ProfileInfoData from 'components/Profile/ProfileInfoData/ProfileInfoData'\nimport {Card} from 'components/_shared/Card/Card'\nimport {UserDataType} from 'types/types'\nimport {checkOnline} from 'utils/functions'\n\ntype PropsType = {\n    user: UserDataType\n    isOwner: boolean,\n    onAvatarSubmit: (image: File, cropArea: Area) => void\n    onCoverImageSubmit: (image: File, cropArea: Area) => void\n    onStatusUpdate: (status: string) => void\n}\n\nconst Profile: React.FC<PropsType> = ({\n                                          user,\n                                          isOwner,\n                                          onAvatarSubmit,\n                                          onCoverImageSubmit,\n                                          onStatusUpdate\n                                      }) => {\n\n    return (\n        <Card>\n            <ProfileCoverImage\n                owner={isOwner}\n                img={user.coverImage}\n                onCoverImageSubmit={onCoverImageSubmit}\n            />\n            <ProfileInfoHeader\n                online={checkOnline(user.updatedAt)}\n                owner={isOwner}\n                firstName={user.firstName}\n                lastName={user.lastName}\n                status={user.status}\n                avatar={user.avatar}\n                onAvatarSubmit={onAvatarSubmit}\n                onStatusUpdate={onStatusUpdate}\n            />\n            <ProfileInfoData\n                birthDate={user.birthDate}\n                location={user.location}\n                contacts={user.contacts}\n                bio={user.bio}\n            />\n        </Card>\n    )\n}\n\nexport default Profile","import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Redirect, useParams} from 'react-router-dom'\nimport {getUserData, updateAvatar, updateCoverImage, updateStatus} from 'store/reducers/profile.reducer'\nimport {getUserPosts} from 'store/reducers/posts.reducer'\nimport {RootState} from 'store/store'\nimport {Area} from 'react-easy-crop/types'\nimport NewPostInputForm from 'components/_forms/NewPostInputForm/NewPostInputForm'\nimport Feed from 'components/Feed/Feed'\nimport Profile from 'components/Profile/Profile'\nimport {Helmet} from 'react-helmet'\n\n\nconst ProfilePage: React.FC = () => {\n    let {username}: { username: string } = useParams()\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if (username) {\n            dispatch(getUserData(username))\n            dispatch(getUserPosts(username))\n        }\n    }, [username, dispatch])\n\n\n    const authUser = useSelector((state: RootState) => state.auth.user)\n    const profileUser = useSelector((state: RootState) => state.profile.user)\n    const isOwner = authUser?._id === profileUser._id\n    const posts = useSelector((state: RootState) => state.posts.posts)\n\n    const onAvatarSubmit = (image: File, cropArea: Area) => {\n        const formData = new FormData()\n        formData.append('image', image)\n        formData.append('crop', JSON.stringify(cropArea))\n        dispatch(updateAvatar(formData))\n    }\n\n    const onCoverImageSubmit = (image: File, cropArea: Area) => {\n        const formData = new FormData()\n        formData.append('image', image)\n        formData.append('crop', JSON.stringify(cropArea))\n        dispatch(updateCoverImage(formData))\n    }\n\n    const onStatusUpdate = (status: string) => {\n        dispatch(updateStatus(status))\n    }\n\n    if (!authUser && !username) return <Redirect to={`/login`}/>\n    if (authUser && !username) return <Redirect to={`/profile/${authUser.username}`}/>\n    return <>\n        {profileUser.firstName && profileUser.lastName && <Helmet>\n            <title>{profileUser.firstName} {profileUser.lastName}</title>\n        </Helmet>}\n        <Profile\n            user={profileUser}\n            isOwner={isOwner}\n            onAvatarSubmit={onAvatarSubmit}\n            onCoverImageSubmit={onCoverImageSubmit}\n            onStatusUpdate={onStatusUpdate}\n        />\n        {isOwner && <NewPostInputForm />}\n        <Feed posts={posts}/>\n    </>\n}\n\n\nexport default ProfilePage\n"],"sourceRoot":""}
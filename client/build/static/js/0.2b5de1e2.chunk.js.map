{"version":3,"sources":["components/_shared/ConfirmPopup/ConfirmPopup.tsx","components/_shared/Button/DeleteButton/DeleteButton.tsx","components/Post/PostHeader/PostHeader.tsx","components/Post/PostText/PostText.tsx","components/Post/PostControls/PostControls.tsx","components/_forms/AddPostCommentForm/AddPostCommentForm.tsx","components/Post/PostComments/PostComment/PostComment.tsx","components/_shared/Button/ShowMoreButton/ShowMoreButton.tsx","components/Post/PostComments/PostCommentsList/PostCommentsList.tsx","components/Post/PostComments/PostComments.tsx","components/ErrorBoundary.tsx","components/Post/Post.tsx","components/Post/PostHeader/PostHeader.module.scss","components/_shared/ConfirmPopup/ConfirmPopup.module.scss","components/Post/PostText/PostText.module.scss","components/Post/PostComments/PostComments.module.scss","components/_forms/AddPostCommentForm/AddPostCommentForm.module.scss","components/Post/PostComments/PostComment/PostComment.module.scss"],"names":["ConfirmPopup","open","children","confirmButtonText","declineButtonText","onConfirm","onDecline","important","ModalWindow","className","classes","question","horizontalAlign","gap","Button","type","onClick","Text","DeleteButton","onDelete","warningMessage","disabled","useState","setOpen","size","Icon","color","colors","textMid","PostHeader","id","date","author","isAuthor","padding","to","username","Avatar","smallImg","avatar","small","online","checkOnline","updatedAt","verticalAlign","userName","firstName","lastName","PostText","bordered","text","PostControls","likes","isLiked","onLikeClick","onCommentClick","onShareClick","stretch","length","accent","AddPostCommentForm","onAddComment","authorizedUser","useSelector","state","auth","user","Form","onSubmit","data","initialValues","resetAfterSubmit","tabIndex","undefined","InputText","name","placeholder","PostComment","_id","createdAt","authorizedUserId","formatDate","ShowMoreButton","route","PostCommentsList","active","comments","commentsShown","postId","slice","reverse","map","comment","PostComments","onAddCommentClick","onDeleteCommentClick","classnames","ErrorBoundary","props","hasError","error","errorInfo","console","log","this","style","border","borderRadius","backgroundColor","display","justifyContent","alignItems","message","React","Component","Post","post","onPostDelete","onPostAddLike","onPostDeleteLike","onDeleteComment","commentSectionActive","setCommentSectionActive","includes","addPostFormRef","useRef","useEffect","current","scrollIntoView","Card","commentId","module","exports"],"mappings":"4RAcaA,EAAgD,SAAC,GAQA,IAPHC,EAOE,EAPFA,KACAC,EAME,EANFA,SAME,IALFC,yBAKE,MALkB,KAKlB,MAJFC,yBAIE,MAJkB,SAIlB,EAHFC,EAGE,EAHFA,UACAC,EAEE,EAFFA,UAEE,IADFC,iBACE,SACzD,OAAQ,cAACC,EAAA,EAAD,CAAaP,KAAMA,EAAnB,SACJ,gCACI,qBAAKQ,UAAWC,IAAQC,SAAxB,SAAmCT,IACnC,eAAC,IAAD,CAAKU,gBAAiB,SAAUC,IAAK,GAArC,UACI,cAACC,EAAA,EAAD,CAAQC,KAAMR,EAAY,SAAW,UAAWS,QAASX,EAAzD,SACI,cAACS,EAAA,EAAOG,KAAR,UAAcd,MAElB,cAACW,EAAA,EAAD,CAAQC,KAAMR,EAAY,UAAY,YAAaS,QAASV,EAA5D,SACI,cAACQ,EAAA,EAAOG,KAAR,UAAcb,eCpBrBc,EAA2C,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,eAAqC,IAArBC,gBAAqB,SACrG,EAAwBC,oBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KAIA,OAAO,eAACT,EAAA,EAAD,CAAQE,QAASI,EAHN,kBAAMG,GAAQ,IAGqBJ,EAAUJ,KAAK,OAAOS,KAAK,KAAKH,SAAUA,EAAxF,UACC,cAACP,EAAA,EAAOW,KAAR,UACI,cAAC,IAAD,CAAWC,MAAOC,IAAOC,QAASJ,KAAM,OAE5C,cAAC,EAAD,CACIvB,KAAMA,EACNI,UAAWc,EACXb,UATO,kBAAMiB,GAAQ,IAUrBhB,WAAS,EAJb,SAMKa,QCPJS,EAAkC,SAAC,GAMO,IALHC,EAKE,EALFA,GACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,SACAd,EACE,EADFA,SAEhD,OAAO,eAAC,IAAD,CAAKe,QAAS,GAAIrB,IAAK,GAAvB,UACH,cAAC,IAAD,CAASsB,GAAE,mBAAcH,EAAOI,UAAhC,SACI,cAACC,EAAA,EAAD,CAAQC,SAAUN,EAAOO,OAAOC,MAAOC,OAAQC,YAAYV,EAAOW,WAAYnB,KAAM,OAExF,eAAC,IAAD,CAAKoB,cAAe,SAApB,UACI,cAAC,IAAD,CAAST,GAAE,mBAAcH,EAAOI,UAAhC,SACI,qBAAK3B,UAAWC,IAAQmC,SAAxB,SAAmCb,EAAOc,UAAY,IAAMd,EAAOe,aAEvE,cAAC,IAAD,CAASZ,GAAE,gBAAWL,GAAtB,SACI,sBAAKrB,UAAWC,IAAQqB,KAAxB,uBAAyCA,UAGjD,cAAC,IAAD,IACCE,GAAY,cAAC,IAAD,UACT,cAAC,IAAD,UACI,cAAC,EAAD,CACId,SAAUA,EACVC,eAAgB,uD,kBCvCvB4B,EAAqB,SAAC,GAAgB,IAAf9C,EAAc,EAAdA,SAChC,OAAO,cAAC,IAAD,CAAKgC,QAAS,iBAAkBU,cAAe,QAASK,UAAU,EAAlE,SACH,qBAAKxC,UAAWC,IAAQwC,KAAxB,SACKhD,O,oCCQAiD,EAAoC,SAAC,GAMO,IALrDC,EAKoD,EALpDA,MACAC,EAIoD,EAJpDA,QACAC,EAGoD,EAHpDA,YACAC,EAEoD,EAFpDA,eACAC,EACoD,EADpDA,aAEA,OAAO,eAAC,IAAD,CAAKZ,cAAe,SAApB,UACH,cAAC,IAAD,CAAKK,UAAU,EAAMf,QAAS,EAAGtB,gBAAiB,SAAU6C,SAAO,EAAnE,SACI,eAAC3C,EAAA,EAAD,CAAQC,KAAK,OAAOS,KAAK,KAAKR,QAASsC,EAAvC,UACI,cAACxC,EAAA,EAAOG,KAAR,UAAcmC,EAAMM,UAClBL,GAAW,cAACvC,EAAA,EAAOW,KAAR,UAAa,cAAC,IAAD,CAAOC,MAAOC,IAAOgC,OAAQnC,KAAM,OAC5D6B,GAAW,cAACvC,EAAA,EAAOW,KAAR,UAAa,cAAC,IAAD,CAAWC,MAAOC,IAAOgC,OAAQnC,KAAM,cAGrE+B,GAAkB,cAAC,IAAD,CAAKN,UAAU,EAAMf,QAAS,EAAGtB,gBAAiB,SAAU6C,SAAO,EAAnE,SACjB,cAAC3C,EAAA,EAAD,CAAQC,KAAK,OAAOS,KAAK,KAAKR,QAASuC,EAAvC,SACI,cAACzC,EAAA,EAAOW,KAAR,UAAa,cAAC,IAAD,CAAoBC,MAAOC,IAAOgC,OAAQnC,KAAM,aAGlEgC,GAAgB,cAAC,IAAD,CAAKP,UAAU,EAAMf,QAAS,EAAGtB,gBAAiB,SAAU6C,SAAO,EAAnE,SACf,cAAC3C,EAAA,EAAD,CAAQC,KAAK,OAAOS,KAAK,KAAKR,QAASwC,EAAvC,SACI,cAAC1C,EAAA,EAAOW,KAAR,UAAa,cAAC,IAAD,CAAWC,MAAOC,IAAOgC,OAAQnC,KAAM,e,oFCDrDoC,EApBiC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,aAAmC,IAArBxC,gBAAqB,SAC3EyC,EAAiBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,KAAKC,QAMpE,OAAO,cAACC,EAAA,EAAD,CAAMC,SAJS,SAACC,GACnBR,EAAaQ,EAAKnB,OAGgBoB,cAAe,CAACpB,KAAM,IAAKqB,kBAAkB,EAA5E,SACH,eAACJ,EAAA,EAAD,WACI,qBAAK1D,UAAWC,IAAQ6B,OAAxB,SACI,cAAC,IAAD,CAASJ,GAAE,0BAAc2B,QAAd,IAAcA,OAAd,EAAcA,EAAgB1B,UAAYoC,SAAUnD,GAAY,OAAIoD,EAA/E,SACI,cAACpC,EAAA,EAAD,CAAQC,SAAQ,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAgBvB,OAAOC,MAAOhB,KAAM,SAG9D,cAACkD,EAAA,EAAD,CAAWC,KAAM,OAAQC,YAAa,kBAAmBvD,SAAUA,IACnE,cAACP,EAAA,EAAD,CAAQO,SAAUA,EAAlB,SAA4B,cAACP,EAAA,EAAOG,KAAR,0B,yBCb3B4D,EAAmC,SAAC,GASO,IARHC,EAQE,EARFA,IACA9C,EAOE,EAPFA,OACAkB,EAME,EANFA,KACA6B,EAKE,EALFA,UAEAC,GAGE,EAJF5B,MAIE,EAHF4B,kBACA7D,EAEE,EAFFA,SAEE,IADFE,gBACE,SAK7CY,EAAW+C,IAAqBhD,EAAO8C,IAE7C,OAAO,eAAC,IAAD,CAAK5C,QAAS,YAAaU,cAAe,QAAS/B,IAAK,GAAIoC,UAAU,EAAtE,UACC,cAAC,IAAD,CAASd,GAAE,mBAAcH,EAAOI,UAAYoC,SAAUnD,GAAY,OAAIoD,EAAtE,SACI,cAACpC,EAAA,EAAD,CAAQC,SAAUN,EAAOO,OAAOC,MAAOhB,KAAM,OAEjD,eAAC,IAAD,CAAKX,IAAK,EAAV,UACI,cAAC,IAAD,CAASsB,GAAE,mBAAcH,EAAOI,UAAYoC,SAAUnD,GAAY,OAAIoD,EAAtE,SACI,sBAAKhE,UAAWC,IAAQsB,OAAxB,UAAiCA,EAAOc,UAAxC,IAAoDd,EAAOe,cAE/D,qBAAKtC,UAAWC,IAAQqB,KAAxB,SAA+BkD,YAAWF,KAC1C,qBAAKtE,UAAWC,IAAQwC,KAAxB,SACKA,OAGT,cAAC,IAAD,IACA,cAAC,IAAD,UACI,cAAC,IAAD,UACKjB,GAAY,cAAC,EAAD,CACTd,SAvBE,WAClBA,EAAS2D,IAuBO1D,eAAgB,2CAChBC,SAAUA,YC3CrB6D,EAAsC,SAAC,GAGoB,IAFhBhF,EAEe,EAFfA,SACAiF,EACe,EADfA,MACA9D,EAAe,EAAfA,SACpD,OAAO,uCACA8D,GAAS,cAAC,IAAD,CAAShD,GAAIgD,EAAOX,SAAUnD,GAAY,OAAIoD,EAA9C,SACR,cAAC3D,EAAA,EAAD,CAAQC,KAAM,OAAQM,SAAUA,EAAhC,SAA0C,cAACP,EAAA,EAAOG,KAAR,UAAcf,GAAY,mBAGtEiF,GAAS,cAACrE,EAAA,EAAD,CAAQC,KAAM,OAAQM,SAAUA,EAAhC,SACP,cAACP,EAAA,EAAOG,KAAR,UAAcf,GAAY,oBCNzBkF,EAA+C,SAAC,GAOO,IANHC,EAME,EANFA,OACAC,EAKE,EALFA,SAKE,IAJFC,qBAIE,MAJa,EAIb,EAHFC,EAGE,EAHFA,OACAR,EAEE,EAFFA,iBACA7D,EACE,EADFA,SAE7D,OAAO,qCACFmE,EACIG,QACAC,UACAD,MAAQF,EAAgB,OAAId,EAAWc,QAAgCd,GACvEkB,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,2BAERA,GAFQ,IAGZZ,iBAAkBA,EAClB7D,SAAUA,EACVE,UAAWgE,IAJNO,EAAQd,UAOlBS,GAAiBD,EAAS5B,OAAS6B,GAAiB,cAAC,IAAD,CAAKrD,QAAS,EAAGtB,gBAAiB,SAAUqC,UAAU,EAAtD,SACnD,cAAC,EAAD,CAAgBkC,MAAK,gBAAWK,GAAUnE,UAAWgE,UChBpDQ,EAAoC,SAAC,GAQO,IAPHR,EAOE,EAPFA,OACAG,EAME,EANFA,OAME,IALFD,qBAKE,MALc,EAKd,EAJFP,EAIE,EAJFA,iBACAM,EAGE,EAHFA,SACAQ,EAEE,EAFFA,kBACAC,EACE,EADFA,qBAElD,OAAO,sBAAKtF,UAAWuF,IACnBtF,IAAQ4E,SADqB,eAE3B5E,IAAQ2E,OAASA,IAFhB,UAIH,cAAC,IAAD,CAAKnD,QAAS,YAAae,UAAU,EAArC,SACQ,cAAC,EAAD,CAAoBY,aAAciC,EAAmBzE,UAAWgE,MAGxE,cAAC,EAAD,CACIA,OAAQA,EACRC,SAAUA,EACVC,cAAeA,EACfC,OAAQA,EACRR,iBAAkBA,EAClB7D,SAAU4E,Q,gCCzCTE,GAAb,kDAII,WAAYC,GAAwC,IAAD,8BAC/C,cAAMA,IACDlC,MAAQ,CACTmC,UAAU,EACVC,MAAO,YAJoC,EAJvD,qDAgBI,SAAkBA,EAAcC,GAC5BC,QAAQC,IAAIH,KAjBpB,oBAoBI,WACI,OAAII,KAAKxC,MAAMmC,SACJ,qBAAKM,MAAO,CACfvE,QAAS,GACTR,MAAO,MACPgF,OAAQ,gBACRC,aAAc,EACdC,gBAAiB,QACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UART,SAUFP,KAAKxC,MAAMoC,QAGbI,KAAKN,MAAMhG,YAnC1B,uCAYI,SAAgCkG,GAC5B,MAAO,CAACD,UAAU,EAAMC,MAAOA,EAAMY,aAb7C,GAAmCC,IAAMC,WCwG1BC,IAnFmB,SAAC,GAUO,IATHC,EASE,EATFA,KASE,IARrC9B,gBAQqC,MAR1B,SAQ0B,MAPFC,qBAOE,MAPc,EAOd,EANF8B,EAME,EANFA,aACAC,EAKE,EALFA,cACAC,EAIE,EAJFA,iBACAvC,EAGE,EAHFA,iBACAnB,EAEE,EAFFA,aACA2D,EACE,EADFA,gBAEnC,EAAwDlG,mBAAsB,UAAbgE,GAAjE,mBAAOmC,EAAP,KAA6BC,EAA7B,KACMzF,EAAW+C,IAAqBoC,EAAKpF,OAAO8C,IAC5C/C,EAAOkD,YAAWmC,EAAKrC,WACvB1B,IAAU2B,GAAmBoC,EAAKhE,MAAMuC,KAAI,SAAAzB,GAAI,OAAIA,EAAKY,OAAK6C,SAAS3C,GA0BvE4C,EAAiBC,iBAAO,MAO9B,OALAC,qBAAU,WAEY,OAAdF,QAAc,IAAdA,KAAgBG,SAAW1C,QAAQuC,EAAeG,QAAQC,mBAC/D,CAACP,IAGA,cAAC,GAAD,UACI,eAACQ,EAAA,EAAD,WACI,cAAC,EAAD,CACInG,GAAIsF,EAAKtC,IACT/C,KAAMA,EACNE,SAAUA,EACVD,OAAQoF,EAAKpF,OACbb,SAvCU,WAClBkG,GAAcA,EAAaD,EAAKtC,QAyC5B,cAAC,EAAD,UACKsC,EAAKlE,OAGV,cAAC,EAAD,CACIE,MAAOgE,EAAKhE,MACZC,QAASA,EACTC,YA7CG,WACVD,EAGGkE,GAAkBA,EAAiBH,EAAKtC,KAFxCwC,GAAeA,EAAcF,EAAKtC,MA4C9BvB,eAA8B,WAAb+B,EA9BJ,WACFoC,GAAvBD,SA6B6EhD,IAErE,cAAC,EAAD,CACIe,OAAQ4B,EAAKtC,IACbE,iBAAkBA,EAClBM,SAAU8B,EAAK9B,SACfC,cAA4B,UAAbD,EAAuB,EAAIC,EAC1CF,OAAQoC,EACR3B,kBA9CU,SAAC5C,GACvBW,EAAauD,EAAKtC,IAAK5B,IA8CX6C,qBA3Ca,SAACmC,GAC1BV,EAAgBU,a,oBCvDxBC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,KAAO,2B,oBCAjGD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,QAAU,gC,oBCAxGD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,yB,oBCAvDD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,OAAS,+B,oBCAvGD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,OAAS,qC,oBCAnED,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,KAAO,0BAA0B,KAAO","file":"static/js/0.2b5de1e2.chunk.js","sourcesContent":["import React from 'react'\nimport classes from './ConfirmPopup.module.scss'\nimport {Button} from 'components/_shared/Button/Button'\nimport {ModalWindow} from 'components/_shared/ModalWindow/ModalWindow'\nimport {Row} from 'components/_shared/Flex/Flex'\n\ntype ConfirmPopupPropsType = {\n    open: boolean\n    confirmButtonText?: string\n    declineButtonText?: string\n    onConfirm: () => void\n    onDecline: () => void\n    important?: boolean\n}\nexport const ConfirmPopup: React.FC<ConfirmPopupPropsType> = ({\n                                                           open,\n                                                           children,\n                                                           confirmButtonText = 'Ok',\n                                                           declineButtonText = 'Cancel',\n                                                           onConfirm,\n                                                           onDecline,\n                                                           important = false\n                                                       }) => {\n    return (<ModalWindow open={open}>\n        <div>\n            <div className={classes.question}>{children}</div>\n            <Row horizontalAlign={'center'} gap={10}>\n                <Button type={important ? 'cancel' : 'primary'} onClick={onConfirm}>\n                    <Button.Text>{confirmButtonText}</Button.Text>\n                </Button>\n                <Button type={important ? 'primary' : 'secondary'} onClick={onDecline}>\n                    <Button.Text>{declineButtonText}</Button.Text>\n                </Button>\n            </Row>\n        </div>\n    </ModalWindow>)\n}","import React, {useState} from 'react'\nimport {Button} from 'components/_shared/Button/Button'\nimport {TrashFill} from 'react-bootstrap-icons'\nimport colors from 'assets/styles/colors.module.scss'\nimport {ConfirmPopup} from 'components/_shared/ConfirmPopup/ConfirmPopup'\n\ntype DeleteButtonType = {\n    disabled?: boolean\n    warningMessage?: string\n    onDelete: () => void\n}\nexport const DeleteButton: React.FC<DeleteButtonType> = ({onDelete, warningMessage, disabled= false}) => {\n    const [open, setOpen] = useState(false)\n    const openModal = () => setOpen(true)\n    const closeModal = () => setOpen(false)\n\n    return <Button onClick={warningMessage ? openModal : onDelete} type=\"text\" size=\"sm\" disabled={disabled}>\n            <Button.Icon>\n                <TrashFill color={colors.textMid} size={16}/>\n            </Button.Icon>\n            <ConfirmPopup\n                open={open}\n                onConfirm={onDelete}\n                onDecline={closeModal}\n                important\n            >\n                {warningMessage}\n            </ConfirmPopup>\n        </Button>\n\n}\n","import React from 'react'\nimport classes from './PostHeader.module.scss'\nimport {UserItemDataType} from 'types/types'\nimport {NavLink} from 'react-router-dom'\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\nimport {Col, Row, Space} from 'components/_shared/Flex/Flex'\nimport {DeleteButton} from 'components/_shared/Button/DeleteButton/DeleteButton'\nimport {Button} from '../../_shared/Button/Button'\nimport {PencilFill} from 'react-bootstrap-icons'\nimport colors from '../../../assets/styles/colors.module.scss'\nimport {checkOnline} from 'utils/functions'\n\ntype PropsType = {\n    id: string\n    date: string\n    author: UserItemDataType\n    isAuthor: boolean\n    onDelete: () => void\n}\nexport const PostHeader: React.FC<PropsType> = ({\n                                                    id,\n                                                    date,\n                                                    author,\n                                                    isAuthor,\n                                                    onDelete\n                                                }) => {\n    return <Row padding={20} gap={20}>\n        <NavLink to={`/profile/${author.username}`}>\n            <Avatar smallImg={author.avatar.small} online={checkOnline(author.updatedAt)} size={50}/>\n        </NavLink>\n        <Col verticalAlign={'center'}>\n            <NavLink to={`/profile/${author.username}`}>\n                <div className={classes.userName}>{author.firstName + ' ' + author.lastName}</div>\n            </NavLink>\n            <NavLink to={`/post/${id}`}>\n                <div className={classes.date}>posted on {date}</div>\n            </NavLink>\n        </Col>\n        <Space/>\n        {isAuthor && <Col>\n            <Row>\n                <DeleteButton\n                    onDelete={onDelete}\n                    warningMessage={'Are you sure you want to delete this post?'}\n                />\n            </Row>\n        </Col>}\n    </Row>\n}\n","import React from 'react'\nimport classes from './PostText.module.scss'\nimport {Row} from 'components/_shared/Flex/Flex'\n\nexport const PostText: React.FC = ({children}) => {\n    return <Row padding={'10px 40px 30px'} verticalAlign={'start'} bordered={true}>\n        <div className={classes.text}>\n            {children}\n        </div>\n    </Row>\n}\n","import React from 'react'\nimport {Button} from 'components/_shared/Button/Button'\nimport {ChatSquareTextFill, Heart, HeartFill, ShareFill} from 'react-bootstrap-icons'\nimport colors from 'assets/styles/colors.module.scss'\nimport {UserItemDataType} from 'types/types'\nimport {Col, Row} from '../../_shared/Flex/Flex'\n\ntype PropsType = {\n    likes: UserItemDataType[]\n    isLiked: boolean,\n    onLikeClick: () => void\n    onCommentClick?: () => void\n    onShareClick?: () => void\n}\n\nexport const PostControls: React.FC<PropsType> = ({\n    likes,\n    isLiked,\n    onLikeClick,\n    onCommentClick,\n    onShareClick\n                                                  }) => {\n    return <Row verticalAlign={'center'}>\n        <Col bordered={true} padding={5} horizontalAlign={'center'} stretch>\n            <Button type=\"text\" size=\"sm\" onClick={onLikeClick}>\n                <Button.Text>{likes.length}</Button.Text>\n                {!isLiked && <Button.Icon><Heart color={colors.accent} size={16}/></Button.Icon>}\n                {isLiked && <Button.Icon><HeartFill color={colors.accent} size={16}/></Button.Icon>}\n            </Button>\n        </Col>\n        {!!onCommentClick && <Col bordered={true} padding={5} horizontalAlign={'center'} stretch>\n            <Button type=\"text\" size=\"sm\" onClick={onCommentClick}>\n                <Button.Icon><ChatSquareTextFill color={colors.accent} size={16}/></Button.Icon>\n            </Button>\n        </Col>}\n        {!!onShareClick && <Col bordered={true} padding={5} horizontalAlign={'center'} stretch>\n            <Button type=\"text\" size=\"sm\" onClick={onShareClick}>\n                <Button.Icon><ShareFill color={colors.accent} size={16}/></Button.Icon>\n            </Button>\n        </Col>}\n    </Row>\n}\n","import React from 'react'\nimport classes from 'components/_forms/AddPostCommentForm/AddPostCommentForm.module.scss'\nimport {Form, FormRow} from 'components/_shared/Form/Form'\nimport {InputText} from 'components/_shared/Input/InputText/InputText'\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\nimport {Button} from 'components/_shared/Button/Button'\nimport {NewCommentType} from 'types/types'\nimport {useSelector} from 'react-redux'\nimport {RootState} from 'store/store'\nimport {NavLink} from 'react-router-dom'\n\ntype PropsType = {\n    disabled?: boolean,\n    onAddComment: (text: string) => void\n}\n\nconst AddPostCommentForm: React.FC<PropsType> = ({onAddComment, disabled= false}) => {\n    const authorizedUser = useSelector((state: RootState) => state.auth.user)\n\n    const submitHandler = (data: NewCommentType) => {\n        onAddComment(data.text)\n    }\n\n    return <Form onSubmit={submitHandler} initialValues={{text: ''}} resetAfterSubmit={true}>\n        <FormRow>\n            <div className={classes.avatar}>\n                <NavLink to={`/profile/${authorizedUser?.username}`} tabIndex={disabled ? -1 : undefined}>\n                    <Avatar smallImg={authorizedUser?.avatar.small} size={30}/>\n                </NavLink>\n            </div>\n            <InputText name={'text'} placeholder={'Write a comment'} disabled={disabled}/>\n            <Button disabled={disabled}><Button.Text>Add</Button.Text></Button>\n        </FormRow>\n    </Form>\n}\n\nexport default AddPostCommentForm\n","import React from 'react'\nimport classes from 'components/Post/PostComments/PostComment/PostComment.module.scss'\nimport {CommentType} from 'types/types'\nimport {NavLink} from 'react-router-dom'\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\nimport {formatDate} from 'utils/functions'\nimport {Button} from 'components/_shared/Button/Button'\nimport {Heart, PencilFill} from 'react-bootstrap-icons'\nimport colors from 'assets/styles/colors.module.scss'\nimport {Col, Row, Space} from 'components/_shared/Flex/Flex'\nimport {DeleteButton} from 'components/_shared/Button/DeleteButton/DeleteButton'\n\ntype PropsType = CommentType & {\n    disabled: boolean,\n    authorizedUserId?: string\n    onDelete: (commentId: string) => void\n}\n\nexport const PostComment: React.FC<PropsType> = ({\n                                                     _id,\n                                                     author,\n                                                     text,\n                                                     createdAt,\n                                                     likes,\n                                                     authorizedUserId,\n                                                     onDelete,\n                                                     disabled = false\n                                                 }) => {\n    const deleteHandler = () => {\n        onDelete(_id)\n    }\n\n    const isAuthor = authorizedUserId === author._id\n\n    return <Row padding={'10px 10px'} verticalAlign={'start'} gap={10} bordered={true}>\n            <NavLink to={`/profile/${author.username}`} tabIndex={disabled ? -1 : undefined}>\n                <Avatar smallImg={author.avatar.small} size={30}/>\n            </NavLink>\n            <Col gap={2}>\n                <NavLink to={`/profile/${author.username}`} tabIndex={disabled ? -1 : undefined}>\n                    <div className={classes.author}>{author.firstName} {author.lastName}</div>\n                </NavLink>\n                <div className={classes.date}>{formatDate(createdAt)}</div>\n                <div className={classes.text}>\n                    {text}\n                </div>\n            </Col>\n            <Space/>\n            <Col>\n                <Row>\n                    {isAuthor && <DeleteButton\n                        onDelete={deleteHandler}\n                        warningMessage={'Are you sure you want to delete comment?'}\n                        disabled={disabled}\n                    />}\n                </Row>\n            </Col>\n        </Row>\n}\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {Button} from '../Button'\n\ntype PropsType = {\n    route?: string\n    disabled?: boolean\n    onClick?: () => void\n}\n\nexport const ShowMoreButton: React.FC<PropsType> = ({\n                                                        children,\n                                                        route,\n                                                        disabled }) => {\n    return <>\n        {!!route && <NavLink to={route} tabIndex={disabled ? -1 : undefined}>\n            <Button type={'link'} disabled={disabled}><Button.Text>{children || 'Show more'}</Button.Text></Button>\n        </NavLink>}\n\n        {!route && <Button type={'link'} disabled={disabled}>\n            <Button.Text>{children || 'Show more'}</Button.Text>\n        </Button>}\n    </>\n}\n","import React from 'react'\nimport {CommentType} from '../../../../types/types'\nimport {PostComment} from '../PostComment/PostComment'\nimport {ShowMoreButton} from '../../../_shared/Button/ShowMoreButton/ShowMoreButton'\nimport {Row} from '../../../_shared/Flex/Flex'\n\ntype PostCommentsType = {\n    active: boolean\n    postId: string\n    commentsShown?: number\n    authorizedUserId?: string\n    onDelete: (commentId: string) => void\n    comments: CommentType[]\n}\nexport const PostCommentsList: React.FC<PostCommentsType> = ({\n                                                                 active,\n                                                                 comments,\n                                                                 commentsShown= 3,\n                                                                 postId,\n                                                                 authorizedUserId,\n                                                                 onDelete\n                                                             }) => {\n    return <>\n        {comments\n            .slice()\n            .reverse()\n            .slice(!!commentsShown ? 0 : undefined, commentsShown ? commentsShown : undefined)\n            .map(comment => <PostComment\n                key={comment._id}\n                {...comment}\n                authorizedUserId={authorizedUserId}\n                onDelete={onDelete}\n                disabled={!active}\n            />)}\n\n        {!!commentsShown && comments.length > commentsShown && <Row padding={5} horizontalAlign={'center'} bordered={true}>\n            <ShowMoreButton route={`/post/${postId}`} disabled={!active}/>\n        </Row>}\n    </>\n}\n","import React, {useEffect, useRef} from 'react'\nimport classes from './PostComments.module.scss'\nimport classnames from 'classnames'\nimport AddPostCommentForm from 'components/_forms/AddPostCommentForm/AddPostCommentForm'\nimport {CommentType} from 'types/types'\nimport {PostCommentsList} from './PostCommentsList/PostCommentsList'\nimport {Row} from '../../_shared/Flex/Flex'\n\ntype PropsType = {\n    active: boolean\n    postId: string\n    authorizedUserId?: string\n    comments: CommentType[]\n    commentsShown?: number\n    onAddCommentClick: (text: string) => void\n    onDeleteCommentClick: (commentId: string) => void\n}\n\n// const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)\n\nexport const PostComments: React.FC<PropsType> = ({\n                                                      active,\n                                                      postId,\n                                                      commentsShown = 3,\n                                                      authorizedUserId,\n                                                      comments,\n                                                      onAddCommentClick,\n                                                      onDeleteCommentClick\n                                                  }) => {\n    return <div className={classnames(\n        classes.comments,\n        {[classes.active]: active}\n    )}>\n        <Row padding={'10px 10px'} bordered={true}>\n                <AddPostCommentForm onAddComment={onAddCommentClick} disabled={!active}/>\n        </Row>\n\n        <PostCommentsList\n            active={active}\n            comments={comments}\n            commentsShown={commentsShown}\n            postId={postId}\n            authorizedUserId={authorizedUserId}\n            onDelete={onDeleteCommentClick}\n        />\n    </div>\n}\n","import React from 'react'\n\nexport class ErrorBoundary extends React.Component<{},{\n    hasError: boolean\n    error: string\n}> {\n    constructor(props: {children: React.ReactElement}) {\n        super(props);\n        this.state = {\n            hasError: false,\n            error: 'Error :('\n        }\n    }\n\n    static getDerivedStateFromError(error: Error) {\n        return {hasError: true, error: error.message}\n    }\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n        console.log(error)\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <div style={{\n                padding: 10,\n                color: 'red',\n                border: '1px solid red',\n                borderRadius: 5,\n                backgroundColor: 'white',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'}}\n            >\n                {this.state.error}\n            </div>\n        }\n        return this.props.children\n    }\n}","import React, {useEffect, useRef, useState} from 'react'\nimport {Card} from 'components/_shared/Card/Card'\nimport {PostType} from 'types/types'\nimport {formatDate} from 'utils/functions'\nimport {PostHeader} from 'components/Post/PostHeader/PostHeader'\nimport {PostText} from 'components/Post/PostText/PostText'\nimport {PostControls} from 'components/Post/PostControls/PostControls'\nimport {PostComments} from 'components/Post/PostComments/PostComments'\nimport {ErrorBoundary} from 'components/ErrorBoundary'\n\n// todo: consider connecting to store here.\ntype PropsType = {\n    post: PostType\n    comments?: 'shown' | 'folded'\n    commentsShown?: number\n    onPostAddLike: (id: string) => void\n    onPostDeleteLike: (id: string) => void\n    onPostDelete: (id: string) => void\n    authorizedUserId?: string\n    onAddComment: (postId: string, text: string) => void\n    onDeleteComment: (commentId: string) => void\n}\n\nconst Post: React.FC<PropsType> = ({\n                                       post,\n    comments = 'folded',\n                                       commentsShown = 3,\n                                       onPostDelete,\n                                       onPostAddLike,\n                                       onPostDeleteLike,\n                                       authorizedUserId,\n                                       onAddComment,\n                                       onDeleteComment\n                                   }) => {\n    const [commentSectionActive, setCommentSectionActive] = useState(comments === 'shown')\n    const isAuthor = authorizedUserId === post.author._id\n    const date = formatDate(post.createdAt)\n    const isLiked = authorizedUserId ? post.likes.map(user => user._id).includes(authorizedUserId) : false\n\n    const postDeleteHandler = () => {\n        if (onPostDelete) onPostDelete(post._id)\n    }\n\n    const toggleLike = () => {\n        if (!isLiked) {\n            if (onPostAddLike) onPostAddLike(post._id)\n        } else {\n            if (onPostDeleteLike) onPostDeleteLike(post._id)\n        }\n    }\n\n    const addCommentHandler = (text: string) => {\n        onAddComment(post._id, text)\n    }\n\n    const deleteCommentHandler = (commentId: string) => {\n        onDeleteComment(commentId)\n    }\n\n    const toggleCommentSection = () => {\n        commentSectionActive ? setCommentSectionActive(false) : setCommentSectionActive(true)\n    }\n\n    const addPostFormRef = useRef(null)\n\n    useEffect(() => {\n        // @ts-ignore\n        if (addPostFormRef?.current && active) addPostFormRef.current.scrollIntoView()\n    }, [commentSectionActive])\n\n    return (\n        <ErrorBoundary>\n            <Card>\n                <PostHeader\n                    id={post._id}\n                    date={date}\n                    isAuthor={isAuthor}\n                    author={post.author}\n                    onDelete={postDeleteHandler}\n                />\n\n                <PostText>\n                    {post.text}\n                </PostText>\n\n                <PostControls\n                    likes={post.likes}\n                    isLiked={isLiked}\n                    onLikeClick={toggleLike}\n                    onCommentClick={(comments === 'folded') ? toggleCommentSection : undefined}\n                />\n                <PostComments\n                    postId={post._id}\n                    authorizedUserId={authorizedUserId}\n                    comments={post.comments}\n                    commentsShown={comments === 'shown' ? 0 : commentsShown}\n                    active={commentSectionActive}\n                    onAddCommentClick={addCommentHandler}\n                    onDeleteCommentClick={deleteCommentHandler}\n                />\n\n            </Card>\n        </ErrorBoundary>\n    )\n}\n\nexport default Post\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostHeader_dark__pjQLY\",\"userName\":\"PostHeader_userName__2YXtN\",\"date\":\"PostHeader_date__3zA_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"ConfirmPopup_dark__2y3YS\",\"question\":\"ConfirmPopup_question__3Kzew\",\"buttons\":\"ConfirmPopup_buttons__3ECl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostText_dark__ialK7\",\"text\":\"PostText_text__1HhJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostComments_dark__2sxGn\",\"comments\":\"PostComments_comments__2UDJ9\",\"active\":\"PostComments_active__ADYYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"AddPostCommentForm_dark__FAmPE\",\"avatar\":\"AddPostCommentForm_avatar__yTG42\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"PostComment_dark__2hJca\",\"author\":\"PostComment_author__1TTdq\",\"date\":\"PostComment_date__2pUUD\",\"text\":\"PostComment_text__3WaNY\"};"],"sourceRoot":""}
{"version":3,"sources":["components/TestPage/TestPage.module.scss","../node_modules/react-bootstrap-icons/dist/icons/search.js","components/TestPage/TestPage.tsx"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Search","forwardRef","_ref","ref","color","size","rest","React","createElement","xmlns","viewBox","width","height","fill","d","propTypes","PropTypes","string","oneOfType","number","defaultProps","TestPage","className","classes","wrapper","column","Card","cardContent","style","display","justifyContent","Button","type","Text","disabled","spinner","alignItems","Icon","Badge","padding","gap","Avatar","smallImg","largeImg","online","name","onEdit","console","log"],"mappings":"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","file":"static/js/14.2aab9ff8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"TestPage_dark__1YFUb\",\"wrapper\":\"TestPage_wrapper__11AZE\",\"column\":\"TestPage_column__2ktvZ\",\"cardContent\":\"TestPage_cardContent__3_mf1\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default Search;","import React from 'react'\r\nimport classes from './TestPage.module.scss'\r\nimport {Card} from \"components/_shared/Card/Card\";\r\nimport {Button} from 'components/_shared/Button/Button'\r\nimport {Avatar} from 'components/_shared/Avatar/Avatar'\r\nimport {Search} from 'react-bootstrap-icons'\r\nimport {Col, Row, Space} from 'components/_shared/Flex/Flex'\r\n\r\n\r\nconst TestPage: React.FC = () => {\r\n    return(\r\n\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.column}>\r\n                    <Card>\r\n                        <div className={classes.cardContent}>\r\n\r\n                            <div>Button types</div>\r\n                            <div style={{display: 'flex', justifyContent: 'space-between', width: '400px'}}>\r\n                                <Button type={'primary'}><Button.Text>primary</Button.Text></Button>\r\n                                <Button type={'secondary'}><Button.Text>secondary</Button.Text></Button>\r\n                                <Button type={'neutral'}><Button.Text>neutral</Button.Text></Button>\r\n                                <Button type={'text'}><Button.Text>text</Button.Text></Button>\r\n                                <Button type={'cancel'}><Button.Text>Cancel</Button.Text></Button>\r\n                                <Button type={'primary'} disabled><Button.Text>disabled</Button.Text></Button>\r\n                            </div>\r\n\r\n                            <div>Button types with spinners</div>\r\n                            <div style={{display: 'flex', justifyContent: 'space-between', width: '400px'}}>\r\n                                <Button type={'primary'} spinner><Button.Text>primary</Button.Text></Button>\r\n                                <Button type={'secondary'} spinner><Button.Text>secondary</Button.Text></Button>\r\n                                <Button type={'neutral'} spinner><Button.Text>neutral</Button.Text></Button>\r\n                                <Button type={'text'} spinner><Button.Text>text</Button.Text></Button>\r\n                                <Button type={'cancel'} spinner><Button.Text>cancel</Button.Text></Button>\r\n                            </div>\r\n\r\n                            <div>Button sizes</div>\r\n                            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '300px'}}>\r\n                                <Button type={'primary'} size={'sm'}><Button.Text>small</Button.Text></Button>\r\n                                <Button type={'primary'} size={'md'}><Button.Text>medium</Button.Text></Button>\r\n                                <Button type={'primary'} size={'lg'}><Button.Text>large</Button.Text></Button>\r\n                            </div>\r\n\r\n                            <div>Buttons with icons</div>\r\n                            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '300px'}}>\r\n                                <Button type={'primary'} size={'sm'}>\r\n                                    <Button.Icon><Search/></Button.Icon>\r\n                                    <Button.Badge>5</Button.Badge>\r\n                                </Button>\r\n                                <Button type={'primary'} size={'md'}>\r\n                                    <Button.Icon><Search/></Button.Icon>\r\n                                </Button>\r\n                                <Button type={'primary'} size={'lg'}>\r\n                                    <Button.Icon><Search/></Button.Icon>\r\n                                    <Button.Badge>5</Button.Badge>\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <div>Button sizes with spinners</div>\r\n                            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', width: '300px'}}>\r\n                                <Button type={'primary'} size={'sm'} spinner><Button.Text>small</Button.Text></Button>\r\n                                <Button type={'primary'} size={'md'} spinner><Button.Text>medium</Button.Text></Button>\r\n                                <Button type={'primary'} size={'lg'} spinner>\r\n                                    <Button.Text>large</Button.Text>\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Card>\r\n                    <Card>\r\n                        <Row padding={20} gap={30}>\r\n                            <Col gap={10}>\r\n                                <div>Item</div>\r\n                                <div>Item</div>\r\n                                <div>Item</div>\r\n                            </Col>\r\n                            <Col gap={20}>\r\n                                <div>Item</div>\r\n                                <div>Item</div>\r\n                                <div>Item</div>\r\n                                <div>Item</div>\r\n                            </Col>\r\n                            <Col><div>Item</div></Col>\r\n                            <Space/>\r\n                            <Col><div>Item</div></Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className={classes.column}>\r\n                    <Card>\r\n                        <div className={classes.cardContent} style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <Avatar\r\n                                    smallImg={'https://i.pravatar.cc/300'}\r\n                                    largeImg={'https://i.pravatar.cc/600'}\r\n                                    online\r\n                                    name={'Human One'}\r\n                                    size={90}\r\n                                    onEdit={() => console.log('Avatar updated.')}\r\n                                />\r\n                                <Avatar\r\n                                    smallImg={'https://i.pravatar.cc/300'}\r\n                                    online\r\n                                    name={'Human One'}\r\n                                    size={70}\r\n                                    onEdit={() => console.log('Avatar updated.')}\r\n                                />\r\n                                <Avatar\r\n                                    smallImg={'https://i.pravatar.cc/300'}\r\n                                    online\r\n                                    name={'Human One'}\r\n                                    size={50}\r\n                                    onEdit={() => console.log('Avatar updated.')}\r\n                                />\r\n                                <Avatar\r\n                                    smallImg={'https://i.pravatar.cc/300'}\r\n                                    online\r\n                                    name={'Human One'}\r\n                                    size={30}\r\n                                    onEdit={() => console.log('Avatar updated.')}\r\n                                />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TestPage"],"sourceRoot":""}
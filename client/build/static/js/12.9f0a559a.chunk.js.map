{"version":3,"sources":["components/_shared/Input/InputTextarea/InputTextarea.tsx","components/_shared/Input/InputTextarea/InputTextarea.module.scss","components/_forms/NewPostInputForm/NewPostInputForm.module.scss","components/Feed/Feed.tsx","components/Feed/Feed.module.scss","../node_modules/react-bootstrap-icons/dist/icons/image.js","components/_forms/NewPostInputForm/NewPostInputForm.tsx","utils/selectors.ts","components/_pages/FeedPage.tsx"],"names":["InputTextarea","name","label","rules","control","rows","disabled","placeholder","render","field","fieldState","required","error","className","classes","textarea","value","onChange","module","exports","Feed","posts","onPostDelete","onPostDeleteLike","authorizedUserId","onPostAddLike","onAddComment","onDeleteComment","wrapper","slice","reverse","map","post","commentsShown","_id","FeedContainer","dispatch","useDispatch","useSelector","state","auth","user","postId","addPostLike","deletePostLike","text","addPostComment","commentId","deletePostComment","deletePost","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","color","size","rest","React","createElement","xmlns","viewBox","width","height","fill","d","propTypes","PropTypes","string","oneOfType","number","defaultProps","NewPostInputForm","isAddPostPending","Card","Form","onSubmit","newPostData","newPostText","addPost","initialValues","resetAfterSubmit","controls","Button","onClick","e","preventDefault","console","log","type","Icon","spinner","Text","getSortedPosts","sort","a","b","createdAt","FeedPage","useEffect","getFeedPosts","useAuthCheck","to"],"mappings":"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","file":"static/js/12.9f0a559a.chunk.js","sourcesContent":["import {Controller, RegisterOptions} from 'react-hook-form'\r\nimport {Control} from 'react-hook-form/dist/types/form'\r\nimport React from 'react'\r\nimport classes from './InputTextarea.module.scss'\r\nimport {Item} from 'components/_shared/Form/Form'\r\n\r\nexport type InputTextareaPropsType = {\r\n    name: string,\r\n    label?: string,\r\n    placeholder?: string,\r\n    rules?: RegisterOptions,\r\n    control?: Control,\r\n    rows?: number,\r\n    disabled?: boolean\r\n}\r\nexport const InputTextarea: React.FC<InputTextareaPropsType> = ({\r\n                                                                    name,\r\n                                                                    label,\r\n                                                                    rules,\r\n                                                                    control,\r\n                                                                    rows = 2,\r\n                                                                    disabled = false,\r\n    placeholder\r\n                                                                }) => {\r\n    return <Controller\r\n        control={control}\r\n        name={name}\r\n        rules={rules}\r\n        render={({field, fieldState}) => <Item label={label} required={!!rules?.required} error={fieldState.error}\r\n                                               disabled={disabled}>\r\n            <textarea\r\n                className={`${classes.textarea} ${fieldState.error ? classes.error : ''}`}\r\n                name={field.name}\r\n                value={field.value}\r\n                onChange={field.onChange}\r\n                rows={rows}\r\n                disabled={disabled}\r\n                placeholder={placeholder}\r\n            />\r\n        </Item>}\r\n    />\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"InputTextarea_dark__c3Uh-\",\"textarea\":\"InputTextarea_textarea__29Lkx\",\"error\":\"InputTextarea_error__7n4iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"NewPostInputForm_dark__2CWsU\",\"controls\":\"NewPostInputForm_controls__XxkAp\"};","import React from 'react'\r\nimport classes from './Feed.module.scss'\r\nimport Post from 'components/Post/Post'\r\nimport {PostType} from 'types/types'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from 'redux/store'\r\nimport {addPostComment, addPostLike, deletePost, deletePostComment, deletePostLike} from 'redux/reducers/posts.reducer'\r\n\r\ntype Props = {\r\n    posts: Array<PostType>\r\n    onPostDelete: (id: string) => void\r\n    onPostAddLike: (id: string) => void\r\n    onPostDeleteLike: (id: string) => void\r\n    authorizedUserId?: string\r\n    onAddComment: (postId: string, text: string) => void\r\n    onDeleteComment: (commentId: string) => void\r\n}\r\n\r\nconst Feed: React.FC<Props> = ({\r\n                                   posts,\r\n                                   onPostDelete,\r\n                                   onPostDeleteLike,\r\n                                   authorizedUserId,\r\n                                   onPostAddLike,\r\n                                   onAddComment,\r\n                                   onDeleteComment\r\n                               }) => {\r\n    return <div className={classes.wrapper}>\r\n        {\r\n            posts.slice().reverse().map(post => <Post\r\n                key={post._id}\r\n                post={post}\r\n                commentsShown={3}\r\n                onPostDelete={onPostDelete}\r\n                onPostDeleteLike={onPostDeleteLike}\r\n                onPostAddLike={onPostAddLike}\r\n                authorizedUserId={authorizedUserId}\r\n                onAddComment={onAddComment}\r\n                onDeleteComment={onDeleteComment}\r\n            />)\r\n        }\r\n    </div>\r\n}\r\n\r\nconst FeedContainer: React.FC<{ posts: Array<PostType> }> = ({posts}) => {\r\n    const dispatch = useDispatch()\r\n    const authorizedUserId = useSelector((state: StateType) => state.auth.user?._id)\r\n\r\n    const postAddLikeHandler = (postId: string) => {\r\n        dispatch(addPostLike(postId))\r\n    }\r\n\r\n    const postDeleteLikeHandler = (postId: string) => {\r\n        dispatch(deletePostLike(postId))\r\n    }\r\n\r\n    const postDeleteHandler = (postId: string) => {\r\n        dispatch(deletePost(postId))\r\n    }\r\n\r\n\r\n    const addCommentHandler = (postId: string, text: string) => {\r\n        dispatch(addPostComment(postId, text))\r\n    }\r\n    const deleteCommentHandler = (commentId: string) => {\r\n        dispatch(deletePostComment(commentId))\r\n    }\r\n\r\n\r\n    return <Feed posts={posts}\r\n                 onPostAddLike={postAddLikeHandler}\r\n                 onPostDeleteLike={postDeleteLikeHandler}\r\n                 onAddComment={addCommentHandler}\r\n                 onDeleteComment={deleteCommentHandler}\r\n                 onPostDelete={postDeleteHandler}\r\n                 authorizedUserId={authorizedUserId}\r\n    />\r\n}\r\n\r\nexport default FeedContainer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"Feed_dark__1sSCY\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default Image;","import React from 'react'\r\nimport {Image} from 'react-bootstrap-icons'\r\nimport {NewPostType} from 'types/types'\r\nimport classes from './NewPostInputForm.module.scss'\r\nimport {Card} from 'components/_shared/Card/Card'\r\nimport {Button} from 'components/_shared/Button/Button'\r\nimport {Form} from 'components/_shared/Form/Form'\r\nimport {InputTextarea} from 'components/_shared/Input/InputTextarea/InputTextarea'\r\nimport {addPost} from 'redux/reducers/posts.reducer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {StateType} from 'redux/store'\r\n\r\ntype PropsType = {\r\n}\r\n\r\nconst NewPostInputForm: React.FC<PropsType> = () => {\r\n    const isAddPostPending = useSelector((state: StateType) => state.posts.isAddPostPending)\r\n\r\n    const dispatch = useDispatch()\r\n    const onAttachFileButtonClick = (e: React.MouseEvent) => {\r\n        e.preventDefault()\r\n        console.log('Attach file button clicked')\r\n    }\r\n\r\n    const onNewPostSubmit = (newPostData: NewPostType) => {\r\n        const {newPostText} = newPostData\r\n        dispatch(addPost(newPostText))\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Form onSubmit={onNewPostSubmit} initialValues={{newPostText: ''}} resetAfterSubmit={true}>\r\n                <InputTextarea name={'newPostText'} placeholder={'Share your thoughts and feelings!'}/>\r\n                <div className={classes.controls}>\r\n                    <Button onClick={onAttachFileButtonClick} type=\"text\" size=\"sm\">\r\n                        <Button.Icon><Image color={'#909BA4'} size={18}/></Button.Icon>\r\n                    </Button>\r\n                    <Button type=\"primary\" size=\"sm\" spinner={isAddPostPending}>\r\n                        <Button.Text>Send</Button.Text>\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewPostInputForm","import {StateType} from 'redux/store'\r\n\r\nexport const getSortedPosts = (state: StateType) => state.posts.posts.sort((a, b) => {\r\n    if (a.createdAt < b.createdAt) {\r\n        return -1\r\n    }\r\n    if (a.createdAt > b.createdAt) {\r\n        return 1\r\n    }\r\n    return 0\r\n})\r\n","import React, {useEffect} from 'react'\r\nimport Feed from 'components/Feed/Feed'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getFeedPosts} from 'redux/reducers/posts.reducer'\r\nimport {getSortedPosts} from 'utils/selectors'\r\nimport {useAuthCheck} from 'utils/hooks'\r\nimport {Redirect} from 'react-router-dom'\r\nimport NewPostInputForm from 'components/_forms/NewPostInputForm/NewPostInputForm'\r\n\r\nconst FeedPage: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const posts = useSelector(getSortedPosts)\r\n\r\n    useEffect(() => {\r\n        dispatch(getFeedPosts())\r\n    }, [dispatch])\r\n\r\n    const authorized = useAuthCheck()\r\n    if (!authorized) return <Redirect to={`/login`}/>\r\n    return <>\r\n        <NewPostInputForm/>\r\n        <Feed posts={posts}/>\r\n    </>\r\n}\r\n\r\nexport default FeedPage"],"sourceRoot":""}